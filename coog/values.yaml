# Default values for coopengo.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

flower:
  enabled: false

##
## Redis chart configuration
##
redis:
  enabled: true
  usePassword: false
  cluster:
    enabled: false
  rbac:
    create: true
  master:
    persistence:
      enabled: false
    disableCommands: []
    resources:
      limits:
        cpu: 200m
        memory: 250Mi
      requests:
        cpu: 100m
        memory: 150Mi
  port: 27017
  podSecurityPolicy:
    create: false
  metrics:
    enabled: false
    prometheusRule:
      enabled: false

externalRedis:
  ## All of these values are only used when redis.enabled is set to false
  ## Redis host
  ##
  host: localhost
  ## Redis port number
  ##
  port: 6379
  ## Redis password
  ##

mongodb:
  enabled: true
  image:
    tag: "4.0.10-debian-9-r39"
  replicaSet:
    enabled: false
  usePassword: true
  mongodbUsername: "root"
  mongodbPassword: "admin"
  mongodbDatabase: coog-gateway
  mongodbRootPassword: "admin"
  resources:
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 200m
      memory: 250Mi

postgresql:
  enabled: true
  persistence:
    enabled: false
  image:
    debug: true
  initdbUsername: coog
  initdbPassword:	coog
  postgresqlDatabase: coog
  postgresqlPassword: coog
  initdbScripts:
    db-init.sql: |
      CREATE ROLE coog WITH LOGIN PASSWORD 'coog';


api:
  enabled: true
  replicaCount: 1

  mongodb:
    database: coog-api-v2

  image:
    repository: coopengo/api
    tag: coog-2.8.16
    pullPolicy: Always
  imagePullSecrets:
    - name: docker-registry
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  resources:
    limits:
      cpu: 700m
      memory: 300Mi
    requests:
      cpu: 200m
      memory: 150Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}


api_b2b_config:
  enabled: false
  replicaCount: 1

  image:
    repository: coopengo/api-b2b-config
    tag: coog-2.8.16
    pullPolicy: Always
  imagePullSecrets:
    - name: docker-registry

  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  resources:
    limits:
      cpu: 200m
      memory: 250Mi
    requests:
      cpu: 100m
      memory: 200Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}


api_b2c:
  enabled: false
  replicaCount: 1

  image:
    repository: coopengo/api-b2c
    tag: coog-2.8.16
    pullPolicy: Always

  imagePullSecrets:
    - name: docker-registry
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  resources:
    limits:
      cpu: 200m
      memory: 250Mi
    requests:
      cpu: 100m
      memory: 250Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

api_identity_manager:
  enabled: true
  replicaCount: 1

  image:
    repository: coopengo/api-identity-manager
    tag: coog-2.8.16
    pullPolicy: Always

  imagePullSecrets:
    - name: docker-registry
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  resources:
    limits:
      cpu: 200m
      memory: 400Mi
    requests:
      cpu: 100m
      memory: 250Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}


api_referential:
  enabled: false
  replicaCount: 1

  image:
    repository: coopengo/api-referential
    tag: coog-2.8.16
    pullPolicy: Always

  imagePullSecrets:
    - name: docker-registry
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  resources:
    limits:
      cpu: 200m
      memory: 400Mi
    requests:
      cpu: 100m
      memory: 250Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}


app_b2c:
  enabled: false
  replicaCount: 1

  image:
    repository: coopengo/app-b2c
    tag: coog-2.8.16
    pullPolicy: Always

  imagePullSecrets:
    - name: docker-registry
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: api-b2c.local
        paths: []

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    limits:
      cpu: 200m
      memory: 250Mi
    requests:
      cpu: 100m
      memory: 75Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}


unoconv:
  replicaCount: 1

  image:
    repository: coopengo/unoconv
    tag: tfk-coog-0.0.2
    pullPolicy: Always

  imagePullSecrets:
    - name: docker-registry
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 5000

  resources:
    limits:
      cpu: 300m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 350Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

celery:
  enabled: false
  workers: 1
  specificBatchConcurrency:
    enabled: false
  replicaCount: 1
  affinity: {}
  nodeSelector: {}
  resources:
    limits:
      cpu: 1
      memory: 1000Mi
    requests:
      cpu: 400m
      memory: 300Mi
  cron:
    resources:
      limits:
        cpu: 200m
        memory: 300Mi
      requests:
        cpu: 100m
        memory: 100Mi
  tolerations: []
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 120
    timeoutSeconds: 10


coog:
  cache_record: 50000
  configurationFiles:
    batch.conf: |-
    coog.conf: |-
  enabled: true
  external_postgres:
    enabled: false
  root_dir: /workspace/io
  postgres:
    database: coog
    user: coog
    password: coog
  workers: 4
  max_worker_memory: 0
  log_level: INFO
  timeout: 3600
  replicaCount: 1
  persistentVolume:
    enabled: true
    name: workspace-io
    io: /workspace/io/
    storageClass: nfs-client
#    storageClass: standard
    size: 10Gi
    claim:
      name: ""


  image:
    repository: coopengo/coog
    tag: coog-2.8.16
    pullPolicy: Always

  imagePullSecrets:
    - name: docker-registry
  nameOverride: ""
  fullnameOverride: ""

  securityContext:
    runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: coog.local
        paths: []

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    limits:
      cpu: 700m
      memory: 1000Mi
    requests:
      cpu: 200m
      memory: 700Mi

  nodeSelector: {}

  tolerations: []

  livenessProbe:
    periodSeconds: 60
    timeoutSeconds: 30
  readinessProbe:
    periodSeconds: 30
    timeoutSeconds: 30

  affinity: {}


cron:
  enabled: false
  affinity: {}
  nodeSelector: {}
  resources:
    limits:
      cpu: 1
      memory: 1000Mi
    requests:
      cpu: 400m
      memory: 300Mi
  tolerations: []
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 120
    timeoutSeconds: 10


paybox:
  enabled: false
  replicaCount: 1

  image:
    repository: coopengo/paybox
    tag: coog-2.8.16
    pullPolicy: Always

  imagePullSecrets:
    - name: docker-registry
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: paybox.local
        paths: []

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    limits:
      cpu: 300m
      memory: 100Mi
    requests:
      cpu: 100m
      memory: 100Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}


web:
  enabled: true
  replicaCount: 1

  image:
    repository: coopengo/web
    tag: coog-2.8.16
    pullPolicy: Always

  imagePullSecrets:
    - name: docker-registry
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: web.local
        paths: []

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  livenessProbe:
    periodSeconds: 60
    timeoutSeconds: 30

  resources:
    limits:
      cpu: 300m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

portal:
  enabled: false
  replicaCount: 1

  image:
    repository: coopengo/portal
    tag: coog-2.8.16
    pullPolicy: Always

  imagePullSecrets:
    - name: docker-registry
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: portal.local
        paths: []

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 200m
      memory: 150Mi
    requests:
      cpu: 100m
      memory: 100Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}


gateway:
  enabled: true
  external_mongodb:
    enabled: false
  mongodb:
    database: coog-gateway
  mongodb_user: root
  mongodb_root_password: admin
  jwt:
    encryption: secret
    expiration: 3600
  whitelist:
  replicaCount: 1
  coog_web_token: "changeme"
  portal_url: coog.local
  gateway_url: coog.local
  entrypoint: "/gateway"
  extraEnv:
    COOG_TOKEN_MODULE: "false"

  image:
    repository: coopengo/gateway
    tag: coog-2.8.16
    pullPolicy: Always

  imagePullSecrets:
    - name: docker-registry
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: gateway.local
        paths: []

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    limits:
      cpu: 500m
      memory: 600Mi
    requests:
      cpu: 100m
      memory: 300Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

static:
  enabled: true
  replicaCount: 1

  image:
    repository: coopengo/static
    tag: coog-2.8.16
    pullPolicy: Always

  imagePullSecrets:
    - name: docker-registry
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: static.local
        paths: []

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    limits:
      cpu: 200m
      memory: 100Mi
    requests:
      cpu: 100m
      memory: 50Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

jwt:
  internal:
    encryption: changeme

batch:
  migquottosr:
    enabled: false
    image:
      pullPolicy: Always
      repository: coopengo/migquottosr
      tags: latest
    schedule: "0 20 * * *"
    imagePullSecrets:
      - name: docker-registry
    resources:
      limits:
        cpu: 200m
        memory: 100Mi
      requests:
        cpu: 100m
        memory: 50Mi
