# Default values for coopengo.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

quota:
  enabled: false
  rolling_update: false

maintenanceMode:
  enabled: false
  imagePullSecrets:
    - name: docker-registry
  image:
    repository: cooghub/nginx-custom-error-pages
    tag: latest
    pullPolicy: Always
  # Possible variables :
  # env:
  #   TEMPLATE_NAME: "coopengo"
  #   DEFAULT_ERROR_PAGE: 404
  #   DEFAULT_HTTP_CODE: 404
  #   SHOW_DETAILS: false
  #   DISABLE_L10N: false
  resources:
    limits:
      cpu: 100m
      memory: 100Mi
    requests:
      cpu: 50m
      memory: 50Mi
    annotations: {}
  nodeSelector: {}

rabbitmq:
  enabled: true
  resources:
    limits:
      cpu: 600m
      memory: 400Mi
    requests:
      cpu: 100m
      memory: 100Mi
  updateStrategyType: RollingUpdate
  extraConfiguration: |-
    consumer_timeout = 172800000
    loopback_users.guest = false
  livenessProbe:
    initialDelaySeconds: 240

mongodb:
  enabled: true
  strategyType: Recreate
  image:
    tag: "4.4.12"
  replicaSet:
    enabled: false
  usePassword: true
  mongodbDatabase: coog-gateway
  resources:
    limits:
      cpu: 100m
      memory: 300Mi
    requests:
      cpu: 50m
      memory: 150Mi
  volumePermissions:
    enabled: true
    resources:
      limits:
        cpu: 100m
        memory: 300Mi
      requests:
        cpu: 50m
        memory: 150Mi

api:
  # -- Deploy api container(s)
  enabled: true
  # -- 	Number of api Pods to run
  replicaCount: 1

  mongodb:
    database: coog-api-v2

  image:
    # -- api image repository
    repository: coopengohub/api
    # -- api image tag
    tag: coog-2.10.2048
    # -- api image pull policy
    pullPolicy: Always

  # -- Specify docker-registry secret names as an array
  imagePullSecrets:
    - name: docker-registry
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  # -- api containers' resource requests and limits
  resources:
    limits:
      cpu: 500m
      memory: 100Mi
    requests:
      cpu: 50m
      memory: 50Mi

  # -- Affinity for pod assignment
  affinity: {}

  # -- Node labels for pod assignment
  nodeSelector: {}

  # -- Tolerations for pod assignment
  tolerations: []


apiB2bConfig:
  # -- Deploy apiB2bConfig container(s)
  enabled: false
  # -- 	Number of apiB2bConfig Pods to run
  replicaCount: 1

  image:
    # -- apiB2bConfig image repository
    repository: coopengohub/api-b2b-config
    # -- apiB2bConfig image tag
    tag: coog-2.10.2048
    # -- apiB2bConfig image pull policy
    pullPolicy: Always

  # -- Specify docker-registry secret names as an array
  imagePullSecrets:
    - name: docker-registry

  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  # -- apiB2bConfig containers' resource requests and limits
  resources:
    limits:
      cpu: 50m
      memory: 80Mi
    requests:
      cpu: 30m
      memory: 40Mi

  # -- Affinity for pod assignment
  affinity: {}

  # -- Node labels for pod assignment
  nodeSelector: {}

  # -- Tolerations for pod assignment
  tolerations: []

apiB2c:
  # -- Deploy apiB2c container(s)
  enabled: false
  # -- 	Number of apiB2c Pods to run
  replicaCount: 1

  image:
    # -- apiB2c image repository
    repository: coopengohub/api-b2c
    # -- apiB2c image tag
    tag: coog-2.10.2048
    # -- apiB2c image pull policy
    pullPolicy: Always

  # -- Specify docker-registry secret names as an array
  imagePullSecrets:
    - name: docker-registry
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  # -- apiB2c containers' resource requests and limits
  resources:
    limits:
      cpu: 50m
      memory: 50Mi
    requests:
      cpu: 20m
      memory: 25Mi

  # -- Affinity for pod assignment
  affinity: {}

  # -- Node labels for pod assignment
  nodeSelector: {}

  # -- Tolerations for pod assignment
  tolerations: []


apiIdentityManager:
  # -- Deploy apiIdentityManager container(s)
  enabled: true
  # -- 	Number of apiIdentityManager Pods to run
  replicaCount: 1

  image:
    # -- api-identity-manager image repository
    repository: coopengohub/api-identity-manager
    # -- api-identity-manager image tag
    tag: coog-2.10.2048
    # -- api-identity-manager image pull policy
    pullPolicy: Always

  # -- Specify docker-registry secret names as an array
  imagePullSecrets:
    - name: docker-registry
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  # -- apiIdentityManager containers' resource requests and limits
  resources:
    limits:
      cpu: 50m
      memory: 70Mi
    requests:
      cpu: 10m
      memory: 30Mi

  # -- Affinity for pod assignment
  affinity: {}

  # -- Node labels for pod assignment
  nodeSelector: {}

  # -- Tolerations for pod assignment
  tolerations: []


apiReferential:
  # -- Deploy apiReferential container(s)
  enabled: false
  # -- 	Number of apiReferential Pods to run
  replicaCount: 1

  image:
    # -- apiReferential image repository
    repository: coopengohub/api-referential
    # -- apiReferential image tag
    tag: coog-2.10.2048
    # -- apiReferential image pull policy
    pullPolicy: Always

  # -- Specify docker-registry secret names as an array
  imagePullSecrets:
    - name: docker-registry
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  # -- apiReferential containers' resource requests and limits
  resources:
    limits:
      cpu: 200m
      memory: 400Mi
    requests:
      cpu: 100m
      memory: 250Mi

  # -- Affinity for pod assignment
  affinity: {}

  # -- Node labels for pod assignment
  nodeSelector: {}

  # -- Tolerations for pod assignment
  tolerations: []


b2c:
  # -- Deploy b2c container(s)
  enabled: false
  # -- 	Number of b2c Pods to run
  replicaCount: 1

  image:
    # -- b2c image repository
    repository: coopengohub/app-b2c
    # -- b2c image tag
    tag: coog-2.10.2048
    # -- b2c image pull policy
    pullPolicy: Always

  # -- Specify docker-registry secret names as an array
  imagePullSecrets:
    - name: docker-registry
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  ingress:
    # -- Enable ingress controller resource for b2c containers'
    enabled: false
    # -- Ingress annotations for b2c containers'
    annotations: {}
      # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # -- Default host for the ingress resource for b2c containers'
    hosts:
      - host: app-b2c.local
        paths: []
    # -- TLS configuration for b2c containers'
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  # -- b2c containers' resource requests and limits
  resources:
    limits:
      cpu: 50m
      memory: 50Mi
    requests:
      cpu: 10m
      memory: 30Mi

  # -- Affinity for pod assignment
  affinity: {}

  # -- Node labels for pod assignment
  nodeSelector: {}

  # -- Tolerations for pod assignment
  tolerations: []


libroconv:
  # -- Deploy libroconv container(s)
  enabled: true
  # -- 	Number of libroconv Pods to run
  replicaCount: 1

  image:
    # -- libroconv image repository
    repository: coopengohub/libroconv
    # -- libroconv image tag
    tag: dgw-0.0.1
    # -- libroconv image pull policy
    pullPolicy: Always

  # -- Specify docker-registry secret names as an array
  imagePullSecrets:
    - name: docker-registry
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 5000

  # -- libroconv containers' resource requests and limits
  resources:
    limits:
      cpu: 300m
      memory: 300Mi
    requests:
      cpu: 50m
      memory: 50Mi

  # -- Affinity for pod assignment
  affinity: {}

  # -- Node labels for pod assignment
  nodeSelector: {}

  # -- Tolerations for pod assignment
  tolerations: []

  livenessProbe:
    initialDelaySeconds: 0
    periodSeconds: 60
    timeoutSeconds: 30
    successThreshold: 1
    failureThreshold: 1
  readinessProbe:
    initialDelaySeconds: 0
    periodSeconds: 30
    timeoutSeconds: 30
    successThreshold: 1
    failureThreshold: 3

celery:
  # -- Deploy celery container(s)
  enabled: false
  # -- 	Number of celery workers to run
  workers: 1
  specificBatchConcurrency:
    enabled: false
    resources:
      limits:
        cpu: 200m
        memory: 700Mi
      requests:
        cpu: 100m
        memory: 300Mi
    # -- Affinity for pod assignment
    affinity: {}

    # -- Node labels for pod assignment
    nodeSelector: {}

    # -- Tolerations for pod assignment
    tolerations: []

    livenessProbe:
      initialDelaySeconds: 30
      periodSeconds: 120
      timeoutSeconds: 10

  # -- 	Number of celery Pods to run
  replicaCount: 1

  # -- celery containers' resource requests and limits
  resources:
    limits:
      cpu: 400m
      memory: 1000Mi
    requests:
      cpu: 100m
      memory: 300Mi
  cron:
    # -- celery cron job containers' resource requests and limits
    backend_configuration: true
    resources:
      limits:
        cpu: 200m
        memory: 300Mi
      requests:
        cpu: 100m
        memory: 100Mi

  # -- Affinity for pod assignment
  affinity: {}

  # -- Node labels for pod assignment
  nodeSelector: {}

  # -- Tolerations for pod assignment
  tolerations: []

  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 120
    timeoutSeconds: 10

  # -- batch configuration
  batch:
    # -- Configure batch workDays
    workDays: 4
    # -- Configure batch workDaysConf
    workDaysConf: french_work_days

coog:
  config:
    COOG_SERVER_WORKERS: 2
    COOG_TIMEOUT: 3600
    LOG_LEVEL: INFO
    TRYTOND_CACHE__CLEAN_TIMEOUT: 0
    TRYTOND_CACHE__RECORD: 50000
    TRYTOND_DATABASE__LANGUAGE: fr
    TRYTOND_EMAIL__FROM: to_define
    TRYTOND_REPORT__UNOCONV: true
    TRYTOND_DEBUG__VIEWS: false
    TRYTOND_DEBUG__DISABLE_SYNTAX_ANALYSIS: true
    TRYTOND_BATCH__ENABLE_CELERY_AUTO_SCALING: 1
    COOG_IWC: 1
  # configurationFiles:
  #   batch.conf: |-

  # -- Deploy coog container(s)
  enabled: true
  root_dir: /workspace/io

  max_worker_memory: 0
  replicaCount: 1
  persistentVolume:
    enabled: true
    name: workspace-io
    io: /workspace/io/
    storageClass: nfs-client
#    storageClass: standard
    size: 10Gi
    claim:
      name: ""


  image:
    # -- coog image repository
    repository: coopengohub/coog
    # -- coog image tag
    tag: coog-2.10.2048
    # -- coog image pull policy
    pullPolicy: Always

  # -- Specify docker-registry secret names as an array
  imagePullSecrets:
    - name: docker-registry
  nameOverride: ""
  fullnameOverride: ""

  securityContext:
    runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  ingress:
    # -- Enable ingress controller resource for coog containers'
    enabled: false
    # -- Ingress annotations for coog containers'
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    # -- Default host for the ingress resource for coog containers'
    hosts:
      - host: coog.local
        paths: []
    # -- TLS configuration for coog containers'
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  # -- coog containers' resource requests and limits
  resources:
    limits:
      cpu: 1500m
      memory: 1750Mi
    requests:
      cpu: 200m
      memory: 300Mi

  initContainers:
    resources:
      limits:
        cpu: 500m
        memory: 800Mi
      requests:
        cpu: 400m
        memory: 400Mi

  # -- Node labels for pod assignment
  nodeSelector: {}

  # -- Tolerations for pod assignment
  tolerations: []

  livenessProbe:
    periodSeconds: 60
    timeoutSeconds: 30
  readinessProbe:
    periodSeconds: 30
    timeoutSeconds: 30

  # -- Affinity for pod assignment
  affinity: {}


cron:
  # -- Deploy cron container(s)
  enabled: true
  affinity: {}

  # -- cron containers' resource requests and limits
  resources:
    limits:
      cpu: 200m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 300Mi
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 120
    timeoutSeconds: 10
    successThreshold: 1
    failureThreshold: 2
  startupProbe:
    initialDelaySeconds: 30
    periodSeconds: 120
    timeoutSeconds: 10
    successThreshold: 1
    failureThreshold: 2
  coogCeleryModule: coog_async.coog_celery
  # -- Node labels for pod assignment
  nodeSelector: {}

  # -- Tolerations for pod assignment
  tolerations: []


web:
  # -- Deploy web container(s)
  enabled: true
  # -- 	Number of web Pods to run
  replicaCount: 1

  image:
    # -- web image repository
    repository: coopengohub/web
    # -- web image tag
    tag: coog-2.10.2048
    # -- web image pull policy
    pullPolicy: Always

  # -- Specify docker-registry secret names as an array
  imagePullSecrets:
    - name: docker-registry
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  ingress:
    # -- Enable ingress controller resource for web containers'
    enabled: false
    # -- Ingress annotations for web containers'
    annotations: {}
      # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # -- Default host for the ingress resource for web containers'
    hosts:
      - host: web.local
        paths: []
    # -- TLS configuration for web containers'
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
    nginx:
      rewritetarget: '/$2'

  livenessProbe:
    periodSeconds: 60
    timeoutSeconds: 30

  # -- web containers' resource requests and limits
  resources:
    limits:
      cpu: 500m
      memory: 200Mi
    requests:
      cpu: 30m
      memory: 30Mi

  # -- Node labels for pod assignment
  nodeSelector: {}

  # -- Tolerations for pod assignment
  tolerations: []

  # -- Affinity for pod assignment
  affinity: {}

b2b:
  # -- Deploy b2b container(s)
  enabled: false
  # -- 	Number of b2b Pods to run
  replicaCount: 1

  image:
    # -- b2b image repository
    repository: coopengohub/b2b
    # -- b2b image tag
    tag: coog-2.10.2048
    # -- b2b image pull policy
    pullPolicy: Always

  # -- Specify docker-registry secret names as an array
  imagePullSecrets:
    - name: docker-registry
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  ingress:
    # -- Enable ingress controller resource for b2b containers'
    enabled: false
    # -- Ingress annotations for b2b containers'
    annotations: {}
      # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # -- Default host for the ingress resource for b2b containers'
    hosts:
      - host: b2b.local
        paths: []
    # -- TLS configuration for b2b containers'
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  # -- b2b containers' resource requests and limits
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 250m
      memory: 50Mi
    requests:
      cpu: 10m
      memory: 25Mi

  # -- Node labels for pod assignment
  nodeSelector: {}

  # -- Tolerations for pod assignment
  tolerations: []

  # -- Affinity for pod assignment
  affinity: {}

gateway:
  # -- Deploy gateway container(s)
  enabled: true
  external_mongodb:
    enabled: false
  mongodb:
    database: coog-gateway
  jwt:
    encryption: secret
    expiration: 3600
  whitelist:
  # -- 	Number of gateway Pods to run
  replicaCount: 1
  b2b_url: coog.local
  gateway_url: coog.local
  entrypoint: "/gateway"
  extraEnv:
    COOG_TOKEN_MODULE: "false"

  image:
    # -- gateway image repository
    repository: coopengohub/gateway
    # -- gateway image tag
    tag: coog-2.10.2048
    # -- gateway image pull policy
    pullPolicy: Always

  # -- Specify docker-registry secret names as an array
  imagePullSecrets:
    - name: docker-registry
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  ingress:
    # -- Enable ingress controller resource for gateway containers'
    enabled: false
    # -- Ingress annotations for gateway containers'
    annotations: {}
      # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # -- Default host for the ingress resource for gateway containers'
    hosts:
      - host: coog.local
        paths: []
    # -- TLS configuration for gateway containers'
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
    nginx:
      rewritetarget: '/$2'

  # -- gateway containers' resource requests and limits
  resources:
    limits:
      cpu: 100m
      memory: 100Mi
    requests:
      cpu: 50m
      memory: 50Mi

  # -- Node labels for pod assignment
  nodeSelector: {}

  # -- Tolerations for pod assignment
  tolerations: []

  # -- Affinity for pod assignment
  affinity: {}

static:
  # -- Deploy static container(s)
  enabled: true
  # -- 	Number of static Pods to run
  replicaCount: 1

  image:
    # -- static image repository
    repository: coopengohub/static
    # -- static image tag
    tag: coog-2.10.2048
    # -- static image pull policy
    pullPolicy: Always

  # -- Specify docker-registry secret names as an array
  imagePullSecrets:
    - name: docker-registry
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  ingress:
    # -- Enable ingress controller resource for static containers'
    enabled: false
    # -- Ingress annotations for static containers'
    annotations: {}
      # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # -- Default host for the ingress resource for static containers'
    hosts:
      - host: static.local
        paths: []
    # -- TLS configuration for static containers'
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  # -- static containers' resource requests and limits
  resources:
    limits:
      cpu: 50m
      memory: 80Mi
    requests:
      cpu: 10m
      memory: 20Mi

  # -- Node labels for pod assignment
  nodeSelector: {}

  # -- Tolerations for pod assignment
  tolerations: []

  # -- Affinity for pod assignment
  affinity: {}

jwt:
  internal:
    encryption: changeme

# B2C Frontend
customerFrontend:
  # -- Deploy b2b container(s)
  enabled: false
  # -- 	Number of b2b Pods to run
  replicaCount: 1

  image:
    # -- b2b image repository
    repository: coopengohub/coog-customer-frontend
    # -- b2b image tag
    tag: coog-2.13.2137
    # -- b2b image pull policy
    pullPolicy: Always

  # -- Specify docker-registry secret names as an array
  imagePullSecrets:
    - name: docker-registry
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  ingress:
    # -- Enable ingress controller resource for b2b containers'
    enabled: true
    # -- Ingress annotations for b2b containers'
    annotations: {}
      # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # -- Default host for the ingress resource for b2b containers'
    hosts:
      - host: customer.local
        paths: []
    # -- TLS configuration for b2b containers'
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  # -- b2b containers' resource requests and limits
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 100m
      memory: 100Mi
    requests:
      cpu: 50m
      memory: 50Mi

  initContainers:
    resources:
      limits:
        cpu: 400m
        memory: 2000Mi
      requests:
        cpu: 200m
        memory: 1500Mi

  # -- Node labels for pod assignment
  nodeSelector: {}

  # -- Tolerations for pod assignment
  tolerations: []

  # -- Affinity for pod assignment
  affinity: {}

# B2C Backend
customerBackend:
  # -- Deploy b2b container(s)
  enabled: false
  # -- 	Number of b2b Pods to run
  replicaCount: 1
  postgres_db: 'strapi'

  image:
    # -- b2b image repository
    repository: coopengohub/coog-customer-backend
    # -- b2b image tag
    tag: coog-2.13.2137
    # -- b2b image pull policy
    pullPolicy: Always

  # -- Specify docker-registry secret names as an array
  imagePullSecrets:
    - name: docker-registry
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  ingress:
    # -- Enable ingress controller resource for b2b containers'
    enabled: true
    # -- Ingress annotations for b2b containers'
    annotations: {}
      # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # -- Default host for the ingress resource for b2b containers'
    hosts:
      - host: v1.customer.local
        paths: []
    # -- TLS configuration for b2b containers'
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  # -- b2b containers' resource requests and limits
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 400m
      memory: 300Mi
    requests:
      cpu: 100m
      memory: 150Mi

  initContainers:
    resources:
      limits:
        cpu: 400m
        memory: 500Mi
      requests:
        cpu: 200m
        memory: 250Mi

  # -- Node labels for pod assignment
  nodeSelector: {}

  # -- Tolerations for pod assignment
  tolerations: []

  # -- Affinity for pod assignment
  affinity: {}
