# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
suite: Test gateway configmap
templates:
  - gateway/configmap.yaml
release:
  name: test # Do not edit
  namespace: test
capabilities:
  majorVersion: 1
  minorVersion: 24
tests:
  - it: Test metadata & template
    set:
      frontCore:
        enabled: true
    asserts:
      - isKind:
          of: ConfigMap
      - equal:
          path: metadata.name
          value: test-coog-gateway-configuration
      - equal:
          path: metadata.labels["app.kubernetes.io/name"]
          value: coog-gateway
      - equal:
          path: metadata.labels["app.kubernetes.io/instance"]
          value: test
      - equal:
          path: metadata.labels["app.kubernetes.io/managed-by"]
          value: Helm
      - matchRegex:
          path: metadata.labels["app.kubernetes.io/version"]
          pattern: coog-.*$

  - it: Test variables (1/2)
    set:
      ingress:
        host: test.local
      frontCore:
        enabled: true
        gateway:
          extraEnvVar:
            GATEWAY_DYNAMIC_CONFIG: foo
    asserts:
      - equal:
          path: data.COOG_GATEWAY_URL
          value: "https://test.local"
      - equal:
          path: data.COOG_API_IDENTITY_MANAGER_URL
          value: "http://test-coog-api-identity-manager"
      - equal:
          path: data.COOG_API_URL_V2
          value: "http://test-coog-api"
      - equal:
          path: data.COOG_PORTAL_URL
          value: "https://test.local"
      - equal:
          path: data.COOG_API_B2B_CONFIG_URL
          value: "http://test-coog-api-b2b-config"
      - equal:
          path: data.COOG_API_B2C_URL
          value: "http://test-coog-api-b2c"
      - equal:
          path: data.COOG_API_REFERENTIAL_URL
          value: "http://test-coog-api-referential"
      - equal:
          path: data.WHITELIST
          value: http://localhost:4000,https://test.local
      - equal:
          path: data.GATEWAY_DYNAMIC_CONFIG
          value: foo

  - it: Test variables (2/2)
    set:
      ingress:
        host: test.local
      frontCore:
        enabled: true
        gateway:
          ingress:
            hosts:
              - host: test1.hosts.com
            nginx:
              whiteList:
                cors:
                  - https://test2.cors.com
    asserts:
      - equal:
          path: data.WHITELIST
          value: http://localhost:4000,https://test.local,https://test1.hosts.com,https://test2.cors.com

  - it: Test gateway enabled configmap (1/7)
    set:
      frontCore:
        enabled: true
    asserts:
      - hasDocuments:
          count: 1

  - it: Test gateway enabled configmap (2/7)
    set:
      apiB2c:
        enabled: true
    asserts:
      - hasDocuments:
          count: 1

  - it: Test gateway enabled configmap (3/7)
    set:
      apiReferential:
        enabled: true
    asserts:
      - hasDocuments:
          count: 1

  - it: Test gateway enabled configmap (4/7)
    set:
      b2c:
        enabled: true
    asserts:
      - hasDocuments:
          count: 1

  - it: Test gateway enabled configmap (5/7)
    set:
      b2b:
        enabled: true
    asserts:
      - hasDocuments:
          count: 1

  - it: Test gateway enabled configmap (6/7)
    set:
      customerBackend:
        enabled: true
    asserts:
      - hasDocuments:
          count: 1

  - it: Test gateway enabled configmap (7/7)
    set:
      customerFrontend:
        enabled: true
    asserts:
      - hasDocuments:
          count: 1

  - it: Test not enabled configmap (1/2)
    asserts:
      - hasDocuments:
          count: 0

  - it: Test not enabled configmap (2/2)
    set:
      frontCore:
        enabled: false
      apiB2c:
        enabled: false
      apiReferential:
        enabled: false
      b2c:
        enabled: false
      b2b:
        enabled: false
      customerBackend:
        enabled: false
      customerFrontend:
        enabled: false
    asserts:
      - hasDocuments:
          count: 0
