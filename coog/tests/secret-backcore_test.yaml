# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
suite: Test backcore secret
templates:
  - secret-backcore.yaml
release:
  name: test # Do not edit
  namespace: test
capabilities:
  majorVersion: 1
  minorVersion: 29
tests:
  - it: Test metadata & template
    asserts:
      - isKind:
          of: Secret
      - equal:
          path: metadata.name
          value: test-coog-backcore-configuration
      - equal:
          path: metadata.labels["app.kubernetes.io/name"]
          value: coog
      - equal:
          path: metadata.labels["app.kubernetes.io/instance"]
          value: test
      - equal:
          path: metadata.labels["app.kubernetes.io/managed-by"]
          value: Helm
      - matchRegex:
          path: metadata.labels["app.kubernetes.io/version"]
          pattern: coog-.*$
      - equal:
          path: metadata.annotations["helm.sh/resource-policy"]
          value: keep

  - it: Test variables (1/2)
    set:
      secrets:
        backCore:
          extraEnvVar:
            ENABLE_BACKCORE_SECRET: foo
    asserts:
      - equal:
          path: stringData.TRYTOND_DATABASE__URI
          value: postgresql://:@test-postgresql:5432/test
      - equal:
          path: stringData.TRYTOND_ASYNC__CELERY
          value: amqp://user:@test-rabbitmq:5672
      - equal:
          path: stringData.TRYTOND_ASYNC_CELERY
          value: amqp://user:@test-rabbitmq:5672
      - isNotEmpty:
          path: stringData.TRYTOND_SESSION__PASSPHRASE
      - equal:
          path: stringData.ENABLE_BACKCORE_SECRET
          value: foo

  - it: Test variables (2/2)
    set:
      postgresql:
        host: external-postgresql.com
        service:
          ports:
            postgresql: 5433
        auth:
          username: user0
          password: password0
          database: test0
      rabbitmq:
        auth:
          username: user1
          password: password1
        service:
          port: 5673
      secrets:
        backCore:
          extraEnvVar:
            TRYTOND_SESSION__PASSPHRASE: foo
    asserts:
      - equal:
          path: stringData.TRYTOND_DATABASE__URI
          value: postgresql://user0:password0@external-postgresql.com:5433/test0
      - equal:
          path: stringData.TRYTOND_ASYNC__CELERY
          value: amqp://user1:password1@test-rabbitmq:5673
      - equal:
          path: stringData.TRYTOND_ASYNC_CELERY
          value: amqp://user1:password1@test-rabbitmq:5673
      - equal:
          path: stringData.TRYTOND_SESSION__PASSPHRASE
          value: foo
