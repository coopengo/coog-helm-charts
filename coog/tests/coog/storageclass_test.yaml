# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.jsonsuite
suite: Test coog storageclass
templates:
  - coog/storageclass.yaml
release:
  name: test
  namespace: test
capabilities:
  majorVersion: 1
  minorVersion: 29
tests:
  - it: Test customStorageClass
    set:
      backCore:
        persistentVolume:
          enabled: true
          storageClass: efs-sc
          customStorageClass:
            provisioner: efs.csi.aws.com
            parameters:
              provisioningMode: efs-ap
              fileSystemId: fs-12345678
              directoryPerms: "777"
              gidRangeStart: "1000"
              gidRangeEnd: "2000"
              basePath: "/dynamic_provisioning"
            mountOptions:
              - tls
            reclaimPolicy: Retain
            allowVolumeExpansion: true
            volumeBindingMode: Immediate
    asserts:
      - isKind:
          of: StorageClass
      - equal:
          path: metadata.name
          value: efs-sc
      - isSubset:
          path: parameters
          content:
            provisioningMode: efs-ap
            fileSystemId: fs-12345678
            directoryPerms: "777"
            gidRangeStart: "1000"
            gidRangeEnd: "2000"
            basePath: "/dynamic_provisioning"
      - contains:
          path: mountOptions
          content: tls
      - equal:
          path: provisioner
          value: efs.csi.aws.com
      - equal:
          path: reclaimPolicy
          value: Retain
      - equal:
          path: allowVolumeExpansion
          value: true
      - equal:
          path: volumeBindingMode
          value: Immediate

  - it: Test fail message when .Values.backCore.persistentVolume.storageClass not defined
    set:
      backCore:
        persistentVolume:
          enabled: true
          storageClass: ""
          customStorageClass:
            provisioner: efs.csi.aws.com
    asserts:
      - failedTemplate:
          errorMessage: .Values.backCore.persistentVolume.storageClass is required when using customStorageClass!

  - it: Test not enabled storageClass (1/3)
    set:
      backCore:
        persistentVolume:
          enabled: false
          customStorageClass:
            provisioner: efs.csi.aws.com
    asserts:
      - hasDocuments:
          count: 0

  - it: Test not enabled storageClass (2/3)
    set:
      backCore:
        persistentVolume:
          enabled: true
          customStorageClass: {}
    asserts:
      - hasDocuments:
          count: 0

  - it: Test not enabled storageClass (3/3)
    set:
      backCore:
        persistentVolume:
          enabled: false
          customStorageClass: {}
    asserts:
      - hasDocuments:
          count: 0
