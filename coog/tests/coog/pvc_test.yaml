# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.jsonsuite
suite: Test coog Persistent Volume Claim
templates:
  - coog/pvc.yaml
release:
  name: test
  namespace: test
capabilities:
  majorVersion: 1
  minorVersion: 24
tests:
  - it: Test configuration
    set:
      backCore:
        persistentVolume:
          enabled: true
          existingClaim: ""
          existingPersistentVolumeName: "test-volume"
          storageClass: efs-sc
          size: 50Gi
          accessModes:
            - ReadWriteMany
    asserts:
      - isKind:
          of: PersistentVolumeClaim
      - equal:
          path: metadata.name
          value: test-workspace-io
      - equal:
          path: metadata.labels["app.kubernetes.io/name"]
          value: coog
      - equal:
          path: metadata.labels["app.kubernetes.io/instance"]
          value: test
      - equal:
          path: metadata.labels["app.kubernetes.io/managed-by"]
          value: Helm
      - matchRegex:
          path: metadata.labels["app.kubernetes.io/version"]
          pattern: coog-.*$
      - equal:
          path: spec.storageClassName
          value: efs-sc
      - equal:
          path: spec.resources.requests.storage
          value: 50Gi
      - contains:
          path: spec.accessModes
          content:
            ReadWriteMany
      - equal:
          path: spec.volumeName
          value: test-volume

  - it: Test default values
    set:
      backCore:
        persistentVolume:
          enabled: true
          existingClaim: ""
    asserts:
      - isKind:
          of: PersistentVolumeClaim
      - equal:
          path: metadata.name
          value: test-workspace-io
      - equal:
          path: metadata.labels["app.kubernetes.io/name"]
          value: coog
      - equal:
          path: metadata.labels["app.kubernetes.io/instance"]
          value: test
      - equal:
          path: metadata.labels["app.kubernetes.io/managed-by"]
          value: Helm
      - matchRegex:
          path: metadata.labels["app.kubernetes.io/version"]
          pattern: coog-.*$
      - matchRegex:
          path: spec.resources.requests.storage
          pattern: ^([0-9]+(Ei|E|Pi|P|Ti|T|Gi|G|Mi|M|Ki|k|m)?)$
      - isNotEmpty:
          path: spec.accessModes
      - isNull:
          path: spec.volumeName

  - it: Test not enabled pv (1/3)
    set:
      backCore:
        persistentVolume:
          enabled: true
          existingClaim: test-claim
    asserts:
      - hasDocuments:
          count: 0

  - it: Test not enabled pv (2/3)
    set:
      backCore:
        persistentVolume:
          enabled: false
          existingClaim: test-claim
    asserts:
      - hasDocuments:
          count: 0

  - it: Test not enabled pv (3/3)
    set:
      backCore:
        persistentVolume:
          enabled: false
          existingClaim: ""
    asserts:
      - hasDocuments:
          count: 0