# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/apischema/helm-testsuite.json
suite: Test customer-backend secret
templates:
  - customer-backend/secret.yaml
release:
  name: test # Do not edit
  namespace: test
capabilities:
  majorVersion: 1
  minorVersion: 24
tests:
  - it: Test metadata & template
    set:
      customerBackend:
        enabled: true
    asserts:
      - isKind:
          of: Secret
      - equal:
          path: metadata.name
          value: test-coog-customer-backend-configuration
      - equal:
          path: metadata.labels["app.kubernetes.io/name"]
          value: coog-customer-backend
      - equal:
          path: metadata.labels["app.kubernetes.io/instance"]
          value: test
      - equal:
          path: metadata.labels["app.kubernetes.io/managed-by"]
          value: Helm
      - matchRegex:
          path: metadata.labels["app.kubernetes.io/version"]
          pattern: coog-.*$

  - it: Test variables (1/2)
    set:
      customerBackend:
        enabled: true
      postgresql:
        auth:
          username: test-user
          password: test-password
      secrets:
        customerBackend:
          extraEnvVar:
            ENABLE_CUSTOMER_BACKEND_SECRET: foo
    asserts:
      - equal:
          path: stringData.DATABASE_USERNAME
          value: test-user
      - equal:
          path: stringData.DATABASE_PASSWORD
          value: test-password
      - isNotEmpty:
          path: stringData.COOG_TOKEN_SHARED_SECRET
      - equal:
          path: stringData.ENABLE_CUSTOMER_BACKEND_SECRET
          value: "foo"

  - it: Test variables (2/2)
    set:
      customerBackend:
        enabled: true
      secrets:
        customerBackend:
          extraEnvVar:
            COOG_TOKEN_SHARED_SECRET: foo
    asserts:
      - equal:
          path: stringData.COOG_TOKEN_SHARED_SECRET
          value: "foo"

  - it: Test customerBackend enabled secret (1/2)
    set:
      customerBackend:
        enabled: true
    asserts:
      - hasDocuments:
          count: 1

  - it: Test customerBackend enabled secret (2/2)
    set:
      customerFrontend:
        enabled: true
    asserts:
      - hasDocuments:
          count: 1

  - it: Test not enabled secret (1/2)
    asserts:
      - hasDocuments:
          count: 0

  - it: Test not enabled secret (2/2)
    set:
      customerBackend:
        enabled: false
      customerFrontend:
        enabled: false
    asserts:
      - hasDocuments:
          count: 0

