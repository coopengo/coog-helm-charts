{{- if .Values.backCore.initDatabase -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s" (include "general.names.short" .) }}
  labels: {{- include "general.labels.standard" . | nindent 4 }}
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: {{ printf "%s" (include "general.names.short" .) }}
      labels: {{- include "general.labels.standard" . | nindent 8 }}
    spec:
      restartPolicy: Never
      containers:
      - name: {{ printf "%s-init-database" (include "general.names.short" .) }}
        image: "alpine:3.17"
        command:
          - "/bin/sh"
          - "-c"
        args:
          -
            apk add --no-cache postgresql-client;
            export PGPASSWORD={{ .Values.postgresql.auth.postgresPassword | quote }};
            PSQL_CMD="psql -h {{ default (printf "%s-%s" .Release.Name "postgresql") .Values.postgresql.host }} -U {{ default "postgres" .Values.postgresql.auth.adminUsername }} -p {{ default "5432" .Values.postgresql.service.ports.postgresql }}";
            if [[ $(${PSQL_CMD} -tAc 'select 1' -d {{ default .Release.Name .Values.postgresql.auth.database | quote }} || echo 0) = "1" ]];then
                echo "Database already exists";
            else
                echo "Create database {{ default .Release.Name .Values.postgresql.auth.database }}...";
                ${PSQL_CMD} -d postgres -c "DO  \$\$ BEGIN IF NOT EXISTS ( SELECT FROM pg_catalog.pg_roles  WHERE  rolname = '{{ default .Release.Name .Values.postgresql.auth.database }}') THEN CREATE ROLE \"{{ default .Release.Name .Values.postgresql.auth.database }}\" LOGIN PASSWORD '{{ default "" .Values.postgresql.auth.password }}'; END IF; END \$\$ ;";
                ${PSQL_CMD} -d postgres -c "ALTER ROLE \"{{ default .Release.Name .Values.postgresql.auth.database }}\" PASSWORD '{{ default "" .Values.postgresql.auth.password }}' ;";
                ${PSQL_CMD} -d postgres -c "GRANT \"{{ default .Release.Name .Values.postgresql.auth.database }}\" TO \"{{ default "postgres" .Values.postgresql.auth.adminUsername }}\";";
                ${PSQL_CMD} -d postgres -c "CREATE DATABASE \"{{ default .Release.Name .Values.postgresql.auth.database }}\" OWNER \"{{ default .Release.Name .Values.postgresql.auth.database }}\" ;";
                ${PSQL_CMD} -d '{{ default .Release.Name .Values.postgresql.auth.database }}' -c "CREATE EXTENSION IF NOT EXISTS unaccent;";
                ${PSQL_CMD} -d '{{ default .Release.Name .Values.postgresql.auth.database }}' -c "CREATE EXTENSION IF NOT EXISTS pg_trgm;";
                echo "Database {{ default .Release.Name .Values.postgresql.auth.database }} has been created.";
            fi
{{- end -}}
