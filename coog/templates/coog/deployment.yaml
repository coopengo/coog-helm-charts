apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "full_name" . }}
  labels:
{{ include "chart_labels" . | indent 4 }}
spec:
  replicas: {{ .Values.coog.replicaCount }}
{{- if not .Values.quota.rolling_update }}
  strategy:
    type: Recreate
{{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "short_name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "short_name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.coog.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if .Values.coog.persistentVolume.enabled }}
      volumes:
        - name: {{ .Release.Name }}-{{ .Values.coog.persistentVolume.name }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-{{ .Values.coog.persistentVolume.name }}
        - name: {{ .Release.Name }}-configuration
          configMap:
            name: {{ .Release.Name }}-configuration
      {{- end }}
      initContainers:
        - name: "{{ .Chart.Name }}-module-update"
          image: "{{ .Values.coog.image.repository }}:{{ .Values.coog.image.tag }}"
          imagePullPolicy: {{ .Values.coog.image.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            procMount: Default
            runAsNonRoot: true
            runAsUser: {{ .Values.coog.securityContext.runAsUser }}
          resources:
            {{- toYaml .Values.coog.initContainers.resources | nindent 12 }}
          command: ['sh', '-c', 'ep admin -cu ir res --activate-dependencies']
          env:
            {{- if .Values.coog.extraEnv }}
            {{- range $key, $value := .Values.coog.extraEnv }}
            - name:  {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
            - name:  COOG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: coog-postgres-db-secret
                  key: USER
            - name:  COOG_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: coog-postgres-db-secret
                  key: PASSWORD
            - name:  TRYTOND_ASYNC__CELERY
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_ASYNC__CELERY
            - name:  TRYTOND_ASYNC_CELERY
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_ASYNC__CELERY
            - name:  TRYTOND_DATABASE__URI
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_DATABASE__URI
            {{- if .Values.secrets.coog.trytond_migration__password }}
            - name: TRYTOND_MIGRATION__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_MIGRATION__PASSWORD
            {{- end }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
      containers:
        - name: {{ include "short_name" . }}
          image: "{{ .Values.coog.image.repository }}:{{ .Values.coog.image.tag }}"
          imagePullPolicy: {{ .Values.coog.image.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            procMount: Default
            runAsNonRoot: true
            runAsUser: {{ .Values.coog.securityContext.runAsUser }}
          command:
            - ep
            - server
            - "{{ .Values.coog.workers }}"
          volumeMounts:
            {{- if .Values.coog.persistentVolume.enabled }}
            - name: {{ .Release.Name }}-{{ .Values.coog.persistentVolume.name }}
              mountPath: {{ .Values.coog.root_dir }}
              readOnly: false
            {{- end }}
            {{- if .Values.coog.configurationFiles }}
            {{- range $key, $val := .Values.coog.configurationFiles }}
            - name: {{ $.Release.Name }}-configuration
              mountPath: /workspace/{{ $key }}
              subPath: {{ $key }}
            {{- end }}
            {{- end }}
          env:
            - name:  COOG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: coog-postgres-db-secret
                  key: USER
            - name:  COOG_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: coog-postgres-db-secret
                  key: PASSWORD
            {{- if .Values.coog.extraEnv }}
            {{- range $key, $value := .Values.coog.extraEnv }}
            - name:  {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
            - name:  TRYTOND_ASYNC__CELERY
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_ASYNC__CELERY
            - name:  TRYTOND_ASYNC_CELERY
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_ASYNC__CELERY
            - name:  TRYTOND_DATABASE__URI
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_DATABASE__URI
            {{- if .Values.secrets.coog.email_uri }}
            - name: TRYTOND_EMAIL__URI
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_EMAIL__URI
            {{- end }}
            {{- if .Values.secrets.coog.trytond_session__passphrase }}
            - name: TRYTOND_SESSION__PASSPHRASE
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_SESSION__PASSPHRASE
            {{- end }}
            {{- if .Values.secrets.coog.trytond_reset_password_api__password_token_secret }}
            - name: TRYTOND_RESET_PASSWORD_API__PASSWORD_TOKEN_SECRET
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_RESET_PASSWORD_API__PASSWORD_TOKEN_SECRET
            {{- end }}
            {{- if .Values.secrets.coog.trytond_prest_ij__access_key }}
            - name: TRYTOND_PREST_IJ__ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_PREST_IJ__ACCESS_KEY
            {{- end }}
            {{- if .Values.secrets.coog.trytond_document_api__document_token_secret }}
            - name: TRYTOND_DOCUMENT_API__DOCUMENT_TOKEN_SECRET
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_DOCUMENT_API__DOCUMENT_TOKEN_SECRET
            {{- end }}
            {{- if .Values.secrets.coog.trytond_batch_report__uri }}
            - name: TRYTOND_BATCH_REPORT__URI
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_BATCH_REPORT__URI
            {{- end }}
            {{- if .Values.secrets.coog.trytond_paybox__secret }}
            - name: TRYTOND_PAYBOX__SECRET
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_PAYBOX__SECRET
            {{- end }}
            {{- if .Values.secrets.coog.trytond_primotexto__key }}
            - name: TRYTOND_PRIMOTEXTO__KEY
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_PRIMOTEXTO__KEY
            {{- end }}
            {{- if .Values.secrets.coog.trytond_migration__password }}
            - name: TRYTOND_MIGRATION__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_MIGRATION__PASSWORD
            {{- end }}
            {{- if .Values.secrets.coog.trytond_strapi__admin_password }}
            - name: TRYTOND_STRAPI__ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_STRAPI__ADMIN_PASSWORD
            {{- end }}
            {{- if .Values.secrets.coog.trytond_strapi__admin_email }}
            - name: TRYTOND_STRAPI__ADMIN_EMAIL
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_STRAPI__ADMIN_EMAIL
            {{- end }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /liveness
              port: http
            exec:
              {{- toYaml .Values.coog.livenessProbe | nindent 12 }}
          readinessProbe:
            httpGet:
              path: "/{{ .Values.secrets.coog.postgres.database }}/readiness"
              port: http
            exec:
              {{- toYaml .Values.coog.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.coog.resources | nindent 12 }}
      {{- with .Values.coog.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.coog.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.coog.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- if .Values.coog.dnsPolicy }}
      dnsPolicy: {{ .Values.coog.dnsPolicy }}
{{- end }}
{{- if .Values.coog.dnsConfig }}
      dnsConfig:
{{ toYaml .Values.coog.dnsConfig | indent 8 }}
{{- end }}