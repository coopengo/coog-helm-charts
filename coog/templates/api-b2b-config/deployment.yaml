{{- if .Values.api_b2b_config.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
spec:
{{- if not .Values.quota.rolling_update }}
  strategy:
    type: Recreate
{{- end }}
  replicas: {{ default .Values.replicaCount .Values.api_b2b_config.replicaCount }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
    spec:
    {{- with .Values.api_b2b_config.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ include "common.names.name" . }}
          image: "{{ .Values.api_b2b_config.image.repository }}:{{ default .Values.image.tag .Values.api_b2b_config.image.tag }}"
          imagepullPolicy: {{ default .Values.image.pullPolicy .Values.api_b2b_config.image.pullPolicy | quote }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            procMount: Default
            runAsNonRoot: true
            runAsUser: 1000
          env:
            - name: COOG_URL
              value: "http://{{ .Release.Name }}-{{ .Chart.Name }}-coog"
            - name: COOG_DB_NAME
              value: "{{ .Values.postgresql.auth.database }}"
            - name:  JWT_INTERNAL_ENCRYPTION
              value: "{{ .Values.jwt.internal.encryption }}"
            {{- if .Values.api_b2b_config.extraEnv }}
            {{- range $key, $value := .Values.api_b2b_config.extraEnv }}
            - name:  {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.api_b2b_config.resources | nindent 12 }}
      {{- with .Values.api_b2b_config.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.api_b2b_config.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.api_b2b_config.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- if .Values.api_b2b_config.dnsPolicy }}
      dnsPolicy: {{ .Values.api_b2b_config.dnsPolicy }}
{{- end }}
{{- if .Values.api_b2b_config.dnsConfig }}
      dnsConfig:
{{ toYaml .Values.api_b2b_config.dnsConfig | indent 8 }}
{{- end }}
{{- end }}
