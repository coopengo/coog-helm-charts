{{- if .Values.web.enable -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
spec:
  replicas: {{ default .Values.replicaCount .Values.web.replicaCount }}
{{- if not .Values.quota.rolling_update }}
  strategy:
    type: Recreate
{{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
    spec:
    {{- with .Values.web.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ include "common.names.name" . }}
          image: "{{ .Values.web.image.repository }}:{{ default .Values.image.tag .Values.web.image.tag }}"
          imagepullPolicy: {{ default .Values.image.pullPolicy .Values.web.image.pullPolicy | quote }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            procMount: Default
            runAsNonRoot: true
            runAsUser: {{ .Values.coog.securityContext.runAsUser }}
          env:
            - name: COOG_API_MONGO_HOST
            {{- if not .Values.gateway.external_mongodb.enable }}
              value: "{{ .Release.Name }}-mongodb"
            {{ else }}
              value: "{{ .Values.gateway.external_mongodb.host }}"
            {{- end }}
            - name: COOG_API_MONGO_PORT
            {{- if not .Values.gateway.external_mongodb.enable }}
              value: "{{ .Values.mongodb.service.port }}"
            {{ else }}
              value: "{{ .Values.gateway.external_mongodb.port }}"
            {{- end }}
            - name: COOG_API_COOG_URL
              value: "http://{{ .Release.Name }}-{{ .Chart.Name }}-coog:{{ .Values.coog.service.port }}"
            - name: COOG_API_COOG_DB
              value: "{{ .Values.postgresql.auth.database }}"
            - name: COOG_API_API_PATH
              value: "/web/api"
            - name: COOG_API_APP_PATH
              value: "/web"
            {{- if .Values.gateway.enable }}
            - name:  COOG_API_MONGO_USER
              valueFrom:
                secretKeyRef:
                  name: coog-gateway-mongo-db-secret
                  key: USER
            - name:  COOG_API_MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: coog-gateway-mongo-db-secret
                  key: PASSWORD
            {{- end }}
            {{- if .Values.web.extraEnv }}
            {{- range $key, $value := .Values.web.extraEnv }}
            - name:  {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /auth
              port: http
            exec:
              {{- toYaml .Values.web.livenessProbe | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /auth
              port: http
          resources:
            {{- toYaml .Values.web.resources | nindent 12 }}
      {{- with .Values.web.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.web.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.web.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- if .Values.web.dnsPolicy }}
      dnsPolicy: {{ .Values.web.dnsPolicy }}
{{- end }}
{{- if .Values.web.dnsConfig }}
      dnsConfig:
{{ toYaml .Values.web.dnsConfig | indent 8 }}
{{- end }}
{{- end }}
