{{- if .Values.gateway.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "full_name" . }}
  labels:
{{ include "chart_labels" . | indent 4 }}
spec:
  replicas: {{ .Values.gateway.replicaCount }}
{{- if not .Values.quota.rolling_update }}
  strategy:
    type: Recreate
{{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "short_name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "short_name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.gateway.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.gateway.image.repository }}:{{ .Values.gateway.image.tag }}"
          imagePullPolicy: {{ .Values.gateway.image.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            procMount: Default
            runAsNonRoot: true
            runAsUser: 1000
          env:
            - name:  COOG_PORTAL_URL
              value: "{{ .Values.gateway.portal_url }}"
            - name:  MONGO_HOST
            {{- if not .Values.gateway.external_mongodb.enabled }}
              value: "{{ .Release.Name }}-mongodb"
            {{- else }}
              value: "{{ .Values.gateway.external_mongodb.host }}"
            {{- end }}
            - name:  MONGO_PORT
            {{- if not .Values.gateway.external_mongodb.enabled }}
              value: "{{ .Values.mongodb.service.port }}"
            {{- else }}
              value: "{{ .Values.gateway.external_mongodb.port }}"
            {{- end }}
            - name:  MONGO_DB_NAME
              value: "{{ .Values.gateway.mongodb.database }}"
            - name:  JWT_ENCRYPTION
              value: "{{ .Values.gateway.jwt.encryption }}"
            - name:  JWT_INTERNAL_ENCRYPTION
              value: "{{ .Values.jwt.internal.encryption }}"
            - name:  JWT_EXPIRATION
              value: "{{ .Values.gateway.jwt.expiration }}"
            - name:  COOG_API_URL
              value: "http://{{ .Release.Name }}-{{ .Chart.Name }}-web"
            - name:  COOG_API_URL_V2
              value: "http://{{ .Release.Name }}-{{ .Chart.Name }}-api"
            - name:  COOG_API_B2B_CONFIG_URL
              value: "http://{{ .Release.Name }}-{{ .Chart.Name }}-api-b2b-config"
            - name:  COOG_API_B2C_URL
              value: "http://{{ .Release.Name }}-{{ .Chart.Name }}-api-b2c"
            - name:  COOG_API_REFERENTIAL_URL
              value: "http://{{ .Release.Name }}-{{ .Chart.Name }}-api-referential"
            - name:  COOG_API_IDENTITY_MANAGER_URL
            {{- if not .Values.api_identity_manager.enabled }}
              value: "http://localhost:3000"
            {{ else }}
              value: "http://{{ .Release.Name }}-{{ .Chart.Name }}-api-identity-manager"
            {{- end }}
            - name:  COOG_WEB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "full_name" . }}-coog-web-secret
                  key: GATEWAY_TOKEN
            - name:  COOG_MODULE
              value: "true"
            - name:  GOOGLE_MODULE
              value: "false"
            - name:  FACEBOOK_MODULE
              value: "false"
            - name:  MONGO_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "full_name" . }}-mongo-db-secret
                  key: USER
            - name:  MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "full_name" . }}-mongo-db-secret
                  key: PASSWORD
            - name:  COOG_GATEWAY_URL
              value: "{{ .Values.gateway.gateway_url }}"
            - name:  COOG_GATEWAY_BASE_PATH
              value: "{{ .Values.gateway.entrypoint }}"
            - name:  COOG_URL
              value: "http://{{ .Release.Name }}-{{ .Chart.Name }}-coog"
            - name:  COOG_DB_NAME
              value: "{{ .Values.coog.postgres.database }}"
            - name:  COOG_GATEWAY_PORT
              value: "8000"
            {{- if .Values.gateway.forcedotcom_client_id }}
            - name:  FORCEDOTCOM_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "full_name" . }}-coog-web-secret
                  key: FORCEDOTCOM_CLIENT_ID
            {{- end }}
            {{- if .Values.gateway.forcedotcom_client_secret }}
            - name:  FORCEDOTCOM_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "full_name" . }}-coog-web-secret
                  key: FORCEDOTCOM_CLIENT_SECRET
            {{- end }}
            {{- if .Values.gateway.extraEnv }}
            {{- range $key, $value := .Values.gateway.extraEnv }}
            - name:  {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.gateway.resources | nindent 12 }}
      {{- with .Values.gateway.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.gateway.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.gateway.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- if .Values.gateway.dnsPolicy }}
      dnsPolicy: {{ .Values.gateway.dnsPolicy }}
{{- end }}
{{- if .Values.gateway.dnsConfig }}
      dnsConfig:
{{ toYaml .Values.gateway.dnsConfig | indent 8 }}
{{- end }}
{{- end }}
