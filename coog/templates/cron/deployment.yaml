apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "general.names.fullname" . }}
  labels: {{- include "general.labels.standard" . | nindent 4 }}
spec:
  replicas: {{ default .Values.replicaCount .Values.backCore.cron.replicaCount }}
  strategy:
    type: {{ default .Values.strategy.type .Values.backCore.strategy.type }}
  selector:
    matchLabels: {{- include "general.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "general.labels.standard" . | nindent 8 }}
      annotations:
        checksum/configmap-global: {{ include (printf "%s/%s" $.Template.BasePath "configmap-global.yaml") . | sha256sum  }}
        checksum/configmap-backcore: {{ include (printf "%s/%s" $.Template.BasePath "configmap-backcore.yaml") . | sha256sum  }}
        checksum/configmap: {{ include (printf "%s/%s/%s" $.Template.BasePath (base (dir .Template.Name)) "configmap.yaml") . | sha256sum }}
        checksum/secret-global: {{ include (printf "%s/%s" $.Template.BasePath "secret-global.yaml") . | sha256sum  }}
        checksum/secret-backcore: {{ include (printf "%s/%s" $.Template.BasePath "secret-backcore.yaml") . | sha256sum  }}
        checksum/secret: {{ include (printf "%s/%s/%s" $.Template.BasePath (base (dir .Template.Name)) "secret.yaml") . | sha256sum }}
        checksum/secret-postgresql: {{ include (printf "%s/%s" $.Template.BasePath "secret-postgresql.yaml") . | sha256sum  }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.imageCredentials.name }}
    {{- if .Values.backCore.persistentVolume.enabled }}
      volumes:
        - name: {{ printf "%s-%s" .Release.Name .Values.backCore.persistentVolume.name | trunc 63 | trimSuffix "-" }}
          persistentVolumeClaim:
            claimName: {{ printf "%s-%s" .Release.Name .Values.backCore.persistentVolume.name | trunc 63 | trimSuffix "-" }}
    {{- end }}
      initContainers:
        - name: {{ printf "%s-waiting-coog" (include "general.names.name" .) | trunc 63 | trimSuffix "-" }}
          image: "curlimages/curl"
          imagePullPolicy: {{ default .Values.image.pullPolicy .Values.backCore.image.pullPolicy | quote }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            procMount: Default
          command: ["/bin/sh","-c"]
          args: ['while [ $(curl -ksw "%{http_code}" "{{ printf "http://%s-%s/%s/readiness" .Release.Name .Chart.Name .Release.Name }}" -o /dev/null) -ne 200 ]; do sleep 5; echo "health check failed . Waiting for coog..."; done']
      containers:
        - name: {{ include "general.names.name" . }}
          image: "{{ default .Values.image.repository .Values.backCore.image.repository }}/{{ .Values.backCore.image.name }}:{{ default .Values.image.tag .Values.backCore.image.tag }}"
          imagePullPolicy: {{ default .Values.image.pullPolicy .Values.backCore.image.pullPolicy | quote }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            procMount: Default
            runAsNonRoot: true
            runAsUser: {{ default .Values.securityContext.runAsUser .Values.backCore.coog.securityContext.runAsUser }}
          command: ['ep', 'cron']
        {{- if .Values.backCore.persistentVolume.enabled }}
          volumeMounts:
            - name: {{ printf "%s-%s" .Release.Name .Values.backCore.persistentVolume.name | trunc 63 | trimSuffix "-" }}
              mountPath: /workspace/io
              readOnly: false
        {{- end }}
          envFrom:
            {{- if .Values.config }}
            - configMapRef:
                name: {{ printf "%s-%s-global-configuration" .Release.Name .Chart.Name | trunc 63 | trimSuffix "-" }}
            {{- end }}
            {{- if .Values.backCore.config }}
            - configMapRef:
                name: {{ printf "%s-%s-backcore-configuration" .Release.Name .Chart.Name | trunc 63 | trimSuffix "-" }}
            {{- end }}
            - configMapRef:
                name: {{ printf "%s-configuration" (include "general.names.fullname" .) | trunc 63 | trimSuffix "-" }}
            {{- if .Values.secrets.config }}
            - secretRef:
                name: {{ printf "%s-%s-global-configuration" .Release.Name .Chart.Name | trunc 63 | trimSuffix "-" }}
            {{- end }}
            {{- if .Values.secrets.backCore.config }}
            - secretRef:
                name: {{ printf "%s-%s-backcore-configuration" .Release.Name .Chart.Name | trunc 63 | trimSuffix "-" }}
            {{- end }}
            {{- if .Values.secrets.backCore.cron.config }}
            - secretRef:
                name: {{ printf "%s-configuration" (include "general.names.fullname" .) | trunc 63 | trimSuffix "-" }}
            {{- end }}
            - secretRef:
                name: {{ printf "%s-%s-postgresql" .Release.Name .Chart.Name | trunc 63 | trimSuffix "-" }}
          ports:
            - name: http
              containerPort: 8000
          startupProbe:
            exec:
              command:
                - "/bin/bash"
                - "-c"
                - "ep cron --check"
            {{- include "general.tplvalues.render" (dict "value" (default .Values.startupProbe .Values.backCore.cron.startupProbe) "context" $) | nindent 12 }}
          livenessProbe:
            exec:
              command:
                - "/bin/bash"
                - "-c"
                - "ep cron --check"
            {{- include "general.tplvalues.render" (dict "value" (default .Values.livenessProbe .Values.backCore.cron.livenessProbe) "context" $) | nindent 12 }}
          resources: {{- toYaml .Values.backCore.cron.resources | nindent 12 }}
      {{- with default .Values.nodeSelector .Values.backCore.cron.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with default .Values.affinity .Values.backCore.cron.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with default .Values.tolerations .Values.backCore.cron.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if default .Values.dnsPolicy .Values.backCore.cron.dnsPolicy }}
      dnsPolicy: {{ default .Values.dnsPolicy .Values.backCore.cron.dnsPolicy }}
      {{- end }}
      {{- if default .Values.dnsConfig .Values.backCore.cron.dnsConfig }}
      dnsConfig: {{- toYaml default .Values.dnsConfig .Values.backCore.cron.dnsConfig | indent 8 }}
      {{- end }}
