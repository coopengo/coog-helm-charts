{{- if (or .Values.customerBackend.enabled
          .Values.customerFrontend.enabled)
-}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "%s-configuration" (include "general.names.fullname" .) }}
  labels: {{- include "general.labels.standard" . | nindent 4 }}
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
stringData:
  DATABASE_USERNAME: {{ default "" .Values.postgresql.auth.username | quote }}
  DATABASE_PASSWORD: {{ default "" .Values.postgresql.auth.password | quote }}
  {{- if not .Values.secrets.customerBackend.extraEnvVar.COOG_TOKEN_SHARED_SECRET }}
  {{ include "secret.token.generator" (dict "key" "COOG_TOKEN_SHARED_SECRET" "secretName" (printf "%s-configuration" (include "general.names.fullname" .)) "namespace" .Release.Namespace) }}
  {{- end }}
  {{- range $key, $value := .Values.secrets.customerBackend.extraEnvVar }}
  {{ $key }}: {{ $value | quote }}
  {{- end }}
{{- end }}
