{{- if .Values.celery.enabled -}}
{{- if .Values.celery.specificBatchConcurrency.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ include "full_name" . }}-single"
  labels:
{{ include "chart_labels" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ include "short_name" . }}-single"
      app.kubernetes.io/instance: "{{ .Release.Name }}-single"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "{{ include "short_name" . }}-single"
        app.kubernetes.io/instance: "{{ .Release.Name }}-single"
    spec:
    {{- with .Values.coog.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if .Values.coog.persistentVolume.enabled }}
      volumes:
        - name: {{ .Release.Name }}-{{ .Values.coog.persistentVolume.name }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-{{ .Values.coog.persistentVolume.name }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.coog.image.repository }}:{{ .Values.coog.image.tag }}"
          imagePullPolicy: {{ .Values.coog.image.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            procMount: Default
            runAsNonRoot: true
            runAsUser: {{ .Values.coog.securityContext.runAsUser }}
          command:
            - ep
            - celery_single
        {{- if .Values.coog.persistentVolume.enabled }}
          volumeMounts:
            - name: {{ .Release.Name }}-{{ .Values.coog.persistentVolume.name }}
              mountPath: {{ .Values.coog.root_dir }}
              readOnly: false
        {{- end }}
          env:
            - name:  COOG_SERVER_WORKERS
              value: "{{ .Values.coog.workers }}"
            - name:  COOG_CELERY_WORKERS
              value: "{{ .Values.celery.workers }}"
            - name:  CELERY_MAX_MEMORY_PER_CHILD
              value: " {{ .Values.coog.max_worker_memory }}"
            - name:  COOG_TIMEOUT
              value: "{{ .Values.coog.timeout }}"
            - name:  LOG_LEVEL
              value: "{{ .Values.coog.log_level }}"
            - name:  COOG_REDIS_HOST
              {{- if .Values.redis.enabled }}
              value: "{{ .Release.Name }}-redis-master"
              {{- else }}
              value: {{ .Values.externalRedis.host | quote }}
              {{- end }}
            - name:  COOG_REDIS_PORT
              {{- if .Values.redis.enabled }}
              value: "{{ .Values.redis.redisPort }}"
              {{- else }}
              value: {{ .Values.externalRedis.port | quote }}
              {{- end }}
            - name:  COOG_POSTGRES_HOST
            {{- if not .Values.coog.external_postgres.enabled }}
              value: "{{ .Release.Name }}-postgresql"
            {{ else }}
              value: "{{ .Values.coog.external_postgres.host }}"
            {{- end }}
            - name:  COOG_POSTGRES_PORT
            {{- if not .Values.coog.external_postgres.enabled }}
              value: "{{ .Values.postgresql.service.port }}"
            {{ else }}
              value: "{{ .Values.coog.external_postgres.port }}"
            {{- end }}
            - name:  COOG_DB_NAME
              value: "{{ .Values.coog.postgres.database }}"
            - name:  COOG_DB_USER
              value: "{{ .Values.coog.postgres.user }}"
            - name:  COOG_DB_PASSWORD
              value: "{{ .Values.coog.postgres.password }}"
            {{- if .Values.coog.extraEnv }}
            {{- range $key, $value := .Values.coog.extraEnv }}
            - name:  {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
            - name: TRYTOND_CACHE__RECORD
              value: "{{ .Values.coog.cache_record }}"
            - name:  TRYTOND_ASYNC__CELERY
              {{- if .Values.redis.enabled }}
              value: "redis://{{ .Release.Name }}-redis-master:{{ .Values.redis.redisPort }}/1"
              {{- else }}
              value: "redis://{{ .Values.externalRedis.host }}:{{ .Values.externalRedis.port }}/1"
              {{- end }}
            - name:  TRYTOND_ASYNC_CELERY
              {{- if .Values.redis.enabled }}
              value: "redis://{{ .Release.Name }}-redis-master:{{ .Values.redis.redisPort }}/1"
              {{- else }}
              value: "redis://{{ .Values.externalRedis.host }}:{{ .Values.externalRedis.port }}/1"
              {{- end }}
            - name:  TRYTOND_CACHE__CLASS
              value: "trytond.cache.SerializableMemoryCache"
            - name:  TRYTOND_CACHE__CLEAN_TIMEOUT
              value: "0"
            - name:  TRYTOND_CACHE__URI
              {{- if .Values.redis.enabled }}
              value: "redis://{{ .Release.Name }}-redis-master:{{ .Values.redis.redisPort }}/0"
              {{- else }}
              value: "redis://{{ .Values.externalRedis.host }}:{{ .Values.externalRedis.port }}/0"
              {{- end }}
            - name:  TRYTOND_DATABASE__URI
            {{- if not .Values.coog.external_postgres.enabled }}
              value: "postgresql://postgres:{{ .Values.coog.postgres.password }}@{{ .Release.Name }}-postgresql:{{ .Values.postgresql.service.port }}/{{ .Values.coog.postgres.database}}"
            {{ else }}
              value: "postgresql://{{ .Values.coog.postgres.user }}:{{ .Values.coog.postgres.password }}@{{ .Values.coog.external_postgres.host }}:{{ .Values.coog.external_postgres.port }}/{{ .Values.coog.postgres.database}}"
            {{ end }}
            - name:  TRYTOND_DEBUG__VIEWS
              value: "False"
            - name:  TRYTOND_DEBUG__DISABLE_SYNTAX_ANALYSIS
              value: "True"
            - name: TRYTOND_EMAIL__URI
              value: "{{ .Values.coog.email_uri }}"
            - name: TRYTOND_EMAIL__FROM
              value: "{{ .Values.coog.email_from }}"
            - name: TRYTOND_REPORT__API
              value: "http://{{ .Release.Name }}-{{ .Chart.Name }}-unoconv:5000/unoconv/{oext}"
            - name: DB_NAME
              value: "{{ .Values.coog.postgres.database }}"
            - name: TRYTOND_BATCH_CONTRACT_INVOICE_BULK___SET___NUMBER__JOB_SIZE
              value: "1"
            - name: TRYTOND_CONCURRENCY_CONTRACT_INVOICE_BULK___SET___NUMBER
              value: "1"
            {{- if .Values.celery.batchConfig }}
            {{- range $key, $value := .Values.celery.batchConfig }}
            - name:  {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - "/bin/bash"
                - "-c"
                - "PYTHONPATH=/workspace/coog/bin/lib celery -A coog_async.broker_celery status"
            {{- toYaml .Values.celery.livenessProbe | nindent 12 }}
          readinessProbe:
            exec:
              command:
                - "/bin/bash"
                - "-c"
                - "PYTHONPATH=/workspace/coog/bin/lib celery -A coog_async.broker_celery status"
          resources:
            {{- toYaml .Values.celery.resources | nindent 12 }}
      {{- with .Values.celery.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.celery.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.celery.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end -}}
{{- end }}
