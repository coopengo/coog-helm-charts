---
# Source: coog/charts/mongodb/templates/serviceaccount.yml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-mongodb
  namespace: default
  labels:
    app: mongodb
    chart: mongodb-7.14.1
    release: "release-name"
    heritage: "Helm"
secrets:
  - name: release-name-mongodb
---
# Source: coog/charts/rabbitmq/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-rabbitmq
  namespace: default
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-7.6.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
secrets:
  - name: release-name-rabbitmq
---
# Source: coog/charts/mongodb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-mongodb
  namespace: default
  labels:
    app: mongodb
    chart: mongodb-7.14.1
    release: "release-name"
    heritage: "Helm"
type: Opaque
data:
  mongodb-root-password:  "YWRtaW4="
  mongodb-password:  "YWRtaW4="
---
# Source: coog/charts/rabbitmq/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-rabbitmq
  namespace: default
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-7.6.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  rabbitmq-password: "YWRtaW4="
  rabbitmq-erlang-cookie: "c2VjcmV0"
---
# Source: coog/templates/coog/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: coog-postgres-db-secret
  labels:
    app.kubernetes.io/name: coog-coog
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  USER: "${client}_${subdomain}"
  PASSWORD: "${db_password}"
---
# Source: coog/templates/coog/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: coog-trytond-secret
  labels:
    app.kubernetes.io/name: coog-coog
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  TRYTOND_DATABASE__URI: "postgresql://${client}_${subdomain}:${db_password}@${db_instance_address}:${db_instance_port}/${client}_${subdomain}"
  TRYTOND_ASYNC__CELERY: "amqp://root:admin@release-name-rabbitmq:5672"
  TRYTOND_SESSION__PASSPHRASE: "Magazine-Stomp-Remission-Catacomb-Operator7"
  TRYTOND_BATCH_REPORT__URI: "smtp+tls://coopengo:ttcipzmkmdhlhawm@smtp.gmail.com:587"
  TRYTOND_EMAIL__URI: "smtp+tls://625832b8e711e0fc77435e2fc078bf5b:f4dc0f50158ca302a0e849269805a564@smtp.tipimail.com:587"
---
# Source: coog/templates/gateway/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: coog-gateway-mongo-db-secret
  labels:
    app.kubernetes.io/name: coog-gateway
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  USER: "root"
  PASSWORD: "admin"
---
# Source: coog/templates/gateway/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: coog-gateway-web-secret
  labels:
    app.kubernetes.io/name: coog-gateway
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  GATEWAY_TOKEN: "1dad1183e63bd4417f03fb5a27385963775d825a1cc81ffe"
---
# Source: coog/charts/rabbitmq/templates/configuration.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-rabbitmq-config
  namespace: default
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-7.6.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  rabbitmq.conf: |-
    ## Username and password
    default_user = root
    default_pass = CHANGEME
    ## Clustering
    cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
    cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
    cluster_formation.node_cleanup.interval = 10
    cluster_formation.node_cleanup.only_log_warning = true
    cluster_partition_handling = autoheal
    # queue master locator
    queue_master_locator = min-masters
    # enable guest user
    loopback_users.guest = false
    consumer_timeout = 172800000
    loopback_users.guest = false
---
# Source: coog/templates/coog/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-configuration
  labels:
    app.kubernetes.io/name: coog-coog
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
data:
    batch.conf: |-
        
    coog.conf: |-
---
# Source: coog/templates/coog/coog-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-workspace-io
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: "efs-sc"
  volumeName: "${client}-${subdomain}-workspace-io"
  resources:
    requests:
      storage: "10Gi"
---
# Source: coog/charts/rabbitmq/templates/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-rabbitmq-endpoint-reader
  namespace: default
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-7.6.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create"]
---
# Source: coog/charts/rabbitmq/templates/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-rabbitmq-endpoint-reader
  namespace: default
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-7.6.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: release-name-rabbitmq
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-rabbitmq-endpoint-reader
---
# Source: coog/charts/mongodb/templates/svc-standalone.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mongodb
  namespace: default
  labels:
    app: mongodb
    chart: mongodb-7.14.1
    release: "release-name"
    heritage: "Helm"
spec:
  type: ClusterIP
  ports:
    - name: mongodb
      port: 27017
      targetPort: mongodb
  selector:
    app: mongodb
    release: "release-name"
---
# Source: coog/charts/rabbitmq/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-rabbitmq-headless
  namespace: default
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-7.6.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - name: epmd
      port: 4369
      targetPort: epmd
    - name: amqp
      port: 5672
      targetPort: amqp
    - name: dist
      port: 25672
      targetPort: dist
    - name: stats
      port: 15672
      targetPort: stats
  selector: 
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/instance: release-name
---
# Source: coog/charts/rabbitmq/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-rabbitmq
  namespace: default
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-7.6.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: amqp
      port: 5672
      targetPort: amqp
      nodePort: null
    - name: epmd
      port: 4369
      targetPort: epmd
      nodePort: null
    - name: dist
      port: 25672
      targetPort: dist
      nodePort: null
    - name: http-stats
      port: 15672
      targetPort: stats
      nodePort: null
  selector: 
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/instance: release-name
---
# Source: coog/templates/api-identity-manager/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-coog-api-identity-manager
  labels:
    app.kubernetes.io/name: coog-api-identity-manager
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: coog-api-identity-manager
    app.kubernetes.io/instance: release-name
---
# Source: coog/templates/api/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-coog-api
  labels:
    app.kubernetes.io/name: coog-api
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: coog-api
    app.kubernetes.io/instance: release-name
---
# Source: coog/templates/celery/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-coog-celery
  labels:
    app.kubernetes.io/name: coog-celery
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: coog-celery
    app.kubernetes.io/instance: release-name
---
# Source: coog/templates/coog/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-coog-coog
  labels:
    app.kubernetes.io/name: coog-coog
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: coog-coog
    app.kubernetes.io/instance: release-name
---
# Source: coog/templates/cron/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-coog-cron
  labels:
    app.kubernetes.io/name: coog-cron
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: coog-cron
    app.kubernetes.io/instance: release-name
---
# Source: coog/templates/gateway/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-coog-gateway
  labels:
    app.kubernetes.io/name: coog-gateway
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: coog-gateway
    app.kubernetes.io/instance: release-name
---
# Source: coog/templates/static/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-coog-static
  labels:
    app.kubernetes.io/name: coog-static
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: coog-static
    app.kubernetes.io/instance: release-name
---
# Source: coog/templates/unoconv/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-coog-unoconv
  labels:
    app.kubernetes.io/name: coog-unoconv
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 5000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: coog-unoconv
    app.kubernetes.io/instance: release-name
---
# Source: coog/templates/web/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-coog-web
  labels:
    app.kubernetes.io/name: coog-web
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: coog-web
    app.kubernetes.io/instance: release-name
---
# Source: coog/charts/mongodb/templates/deployment-standalone.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-mongodb
  namespace: default
  labels:
    app: mongodb
    chart: mongodb-7.14.1
    release: "release-name"
    heritage: "Helm"
spec:
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: mongodb
      release: "release-name"
  template:
    metadata:
      labels:
        app: mongodb
        release: "release-name"
        chart: mongodb-7.14.1
    spec:
      serviceAccountName: release-name-mongodb
      securityContext:
        fsGroup: 1001      
      initContainers:
        - name: volume-permissions
          image: docker.io/bitnami/minideb:buster
          imagePullPolicy: "Always"
          command: ["chown", "-R", "1001:1001", "/bitnami/mongodb"]
          securityContext:
            runAsUser: 0
          resources: 
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 50m
              memory: 150Mi
          volumeMounts:
            - name: data
              mountPath: /bitnami/mongodb
      containers:
        - name: release-name-mongodb
          image: docker.io/bitnami/mongodb:4.0.10-debian-9-r39
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-mongodb
                  key: mongodb-password
            - name: MONGODB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-mongodb
                  key: mongodb-root-password
            - name: MONGODB_USERNAME
              value: "root"
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: "0"
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: "no"
            - name: MONGODB_DATABASE
              value: "coog-gateway"
            - name: MONGODB_ENABLE_IPV6
              value: "no"
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: "no"
          ports:
            - name: mongodb
              containerPort: 27017
          livenessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: data
              mountPath: /bitnami/mongodb
              subPath: 
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 50m
              memory: 150Mi
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: ${client}-${subdomain}-mongodb
---
# Source: coog/templates/api-identity-manager/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-coog-api-identity-manager
  labels:
    app.kubernetes.io/name: coog-api-identity-manager
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: coog-api-identity-manager
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: coog-api-identity-manager
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: docker-registry
      containers:
        - name: coog-api-identity-manager
          image: "cooghub/coog-api-identity-manager:coog-2.12.2218"
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            procMount: Default
            runAsNonRoot: true
            runAsUser: 1000
          env:
            - name:  MONGO_HOST
              value: "release-name-mongodb"
            
            - name:  MONGO_PORT
              value: "27017"
            
            - name:  MONGO_DB_NAME
              value: "coog-api-v2"
            - name:  MONGO_USER
              valueFrom:
                secretKeyRef:
                  name: coog-gateway-mongo-db-secret
                  key: USER
            - name:  MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: coog-gateway-mongo-db-secret
                  key: PASSWORD
            - name: COOG_URL
              value: "http://release-name-coog-coog"
            - name: COOG_DB_NAME
              value: "${client}_${subdomain}"
            - name:  JWT_INTERNAL_ENCRYPTION
              value: "secret"
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            limits:
              cpu: 50m
              memory: 70Mi
            requests:
              cpu: 10m
              memory: 30Mi
---
# Source: coog/templates/api/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-coog-api
  labels:
    app.kubernetes.io/name: coog-api
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: coog-api
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: coog-api
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: docker-registry
      containers:
        - name: coog-api
          image: "cooghub/coog-api:coog-2.12.2218"
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            procMount: Default
            runAsNonRoot: true
            runAsUser: 1000
          env:
            - name:  MONGO_HOST
              value: "release-name-mongodb"
            
            - name:  MONGO_PORT
              value: "27017"
            
            - name:  MONGO_DB_NAME
              value: "coog-api-v2"
            - name:  MONGO_USER
              valueFrom:
                secretKeyRef:
                  name: coog-gateway-mongo-db-secret
                  key: USER
            - name:  MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: coog-gateway-mongo-db-secret
                  key: PASSWORD
            - name: COOG_URL
              value: "http://release-name-coog-coog"
            - name: COOG_DB_NAME
              value: "${client}_${subdomain}"
            - name:  COOG_API_V1_URL
              value: "http://release-name-coog-web"
            - name:  JWT_INTERNAL_ENCRYPTION
              value: "secret"
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            limits:
              cpu: 500m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 50Mi
---
# Source: coog/templates/celery/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-coog-celery
  labels:
    app.kubernetes.io/name: coog-celery
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: coog-celery
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: coog-celery
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: docker-registry
      volumes:
        - name: release-name-workspace-io
          persistentVolumeClaim:
            claimName: release-name-workspace-io
      containers:
        - name: coog-celery
          image: "cooghub/coog-gie:gie-coog-2.12.2218"
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            procMount: Default
            runAsNonRoot: true
            runAsUser: 1000
          command:
            - ep
            - celery
            - "1"
          volumeMounts:
            - name: release-name-workspace-io
              mountPath: /workspace/io
              readOnly: false
          env:
            - name:  COOG_SERVER_WORKERS
              value: "2"
            - name:  COOG_CELERY_WORKERS
              value: "1"
            - name:  CELERY_MAX_MEMORY_PER_CHILD
              value: "512000"
            - name:  COOG_TIMEOUT
              value: "3600"
            - name:  LOG_LEVEL
              value: "WARNING"
            - name:  COOG_POSTGRES_HOST
              value: "${db_instance_address}"
            - name:  COOG_POSTGRES_PORT
              value: "${db_instance_port}"
            - name:  COOG_DB_NAME
              value: "${client}_${subdomain}"
            - name:  COOG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: coog-postgres-db-secret
                  key: USER
            - name:  COOG_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: coog-postgres-db-secret
                  key: PASSWORD
            - name:  ADMIN_DB_PASSWORD
              value: ""
            - name:  ADMIN_DB_USER
              value: ""
            - name:  TRYTOND_BATCH__DAILY
              value: "gie"
            - name:  TRYTOND_DATABASE__PATH
              value: "/workspace/io/edm"
            - name:  TRYTOND_OPTIONS__TABLE_DIMENSION
              value: "10"
            - name:  TRYTOND_REPORT__EXPORT_ROOT_DIR
              value: "/workspace/io/batch/report"
            - name:  TRYTOND_REPORT__UNOCONV_RETRY
              value: "5"
            - name:  TRYTOND_SEPA_PAYMENT__OUT_DIR
              value: "/workspace/io/batch/sepa/sepa_out"
            - name: TRYTOND_CACHE__RECORD
              value: "60000"
            - name:  TRYTOND_ASYNC__CELERY
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_ASYNC__CELERY
            - name:  TRYTOND_ASYNC_CELERY
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_ASYNC__CELERY
            - name:  TRYTOND_CACHE__CLEAN_TIMEOUT
              value: "0"
            - name:  TRYTOND_DATABASE__URI
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_DATABASE__URI
            - name:  TRYTOND_DEBUG__VIEWS
              value: "False"
            - name:  TRYTOND_DEBUG__DISABLE_SYNTAX_ANALYSIS
              value: "True"
            - name: TRYTOND_EMAIL__URI
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_EMAIL__URI
            - name: TRYTOND_SESSION__PASSPHRASE
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_SESSION__PASSPHRASE
            - name: TRYTOND_BATCH_REPORT__URI
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_BATCH_REPORT__URI
            - name: TRYTOND_EMAIL__FROM
              value: "noreply@smeno.fr"
            - name: TRYTOND_REPORT__API
              value: "http://release-name-coog-unoconv:5000/unoconv/{oext}"
            - name: DB_NAME
              value: "${client}_${subdomain}"
            - name: TRYTOND_BATCH_CONTRACT_INVOICE_BULK___SET___NUMBER__JOB_SIZE
              value: "1"
            - name:  TRYTOND_BATCH_ACCOUNT_AGED___BALANCE_GENERATE__OUTPUT_DIR
              value: "/workspace/io/batch/compta/balance_out"
            - name:  TRYTOND_BATCH_ACCOUNT_AGED___BALANCE_GENERATE__POSTED
              value: "1"
            - name:  TRYTOND_BATCH_ACCOUNT_AGED___BALANCE_GENERATE__TERM1
              value: "30"
            - name:  TRYTOND_BATCH_ACCOUNT_AGED___BALANCE_GENERATE__TERM2
              value: "60"
            - name:  TRYTOND_BATCH_ACCOUNT_AGED___BALANCE_GENERATE__TERM3
              value: "90"
            - name:  TRYTOND_BATCH_ACCOUNT_AGED___BALANCE_GENERATE__TYPE
              value: "customer"
            - name:  TRYTOND_BATCH_ACCOUNT_AGED___BALANCE_GENERATE__UNIT
              value: "day"
            - name:  TRYTOND_BATCH_ACCOUNT_DUNNING_TREAT__JOB_SIZE
              value: "0"
            - name:  TRYTOND_BATCH_ACCOUNT_MOVE_AGGREGATED_EXTRACT__FLUSH_SIZE
              value: "1000"
            - name:  TRYTOND_BATCH_ACCOUNT_MOVE_AGGREGATED_EXTRACT__OUTPUT_DIR
              value: "/workspace/io/batch/compta/compta_out"
            - name:  TRYTOND_BATCH_ACCOUNT_MOVE_SNAPSHOT_EXPORT__JOB_SIZE
              value: "0"
            - name:  TRYTOND_BATCH_ACCOUNT_MOVE_SNAPSHOT_TAKE__JOB_SIZE
              value: "0"
            - name:  TRYTOND_BATCH_ACCOUNT_PAYMENT_ACKNOWLEDGE__AUTO_ACKNOWLEDGE
              value: "1"
            - name:  TRYTOND_BATCH_ACCOUNT_PAYMENT_FAIL_MESSAGE_CREATE__ARCHIVE
              value: "/workspace/io/batch/archive/sepa/sepa_in"
            - name:  TRYTOND_BATCH_ACCOUNT_PAYMENT_FAIL_MESSAGE_CREATE__IN_DIRECTORY
              value: "/workspace/io/batch/sepa/sepa_in"
            - name:  TRYTOND_BATCH_ACCOUNT_PAYMENT_FAIL__IN_DIRECTORY
              value: "/workspace/io/batch/sepa/sepa_in"
            - name:  TRYTOND_BATCH_ACCOUNT_PAYMENT_GROUP_CREATE__JOB_SIZE
              value: "0"
            - name:  TRYTOND_BATCH_ACCOUNT_PAYMENT_GROUP_PROCESS__CACHE_SIZE
              value: "100000"
            - name:  TRYTOND_BATCH_ACCOUNT_PAYMENT_PROCESS__JOB_SIZE
              value: "0"
            - name:  TRYTOND_BATCH_ACCOUNT_PAYMENT_SUCCEED__AUTO_ACKNOWLEDGE
              value: "1"
            - name:  TRYTOND_BATCH_ACCOUNT_PAYMENT_TREATMENT__JOB_SIZE
              value: "0"
            - name:  TRYTOND_BATCH_ACCOUNT_PAYMENT_UPDATE__RETRY
              value: "1"
            - name:  TRYTOND_BATCH_ACCOUNT_STATEMENT_LINE_REJECT__IN_DIRECTORY
              value: "/workspace/io/batch/almerys/rejet_in"
            - name:  TRYTOND_BATCH_ACCOUNT_STATEMENT_LINE_REJECT__OUT_DIRECTORY
              value: "/workspace/io/batch/archive/almerys/rejet_in"
            - name:  TRYTOND_BATCH_BANK_MOBILITY__ARCHIVE
              value: "/workspace/io/batch/archive/sepa/mobility_in"
            - name:  TRYTOND_BATCH_BANK_MOBILITY__IN_DIRECTORY
              value: "/workspace/io/batch/sepa/mobility_in"
            - name:  TRYTOND_BATCH_BANK___COG_DATA_IMPORT__ARCHIVE
              value: "/workspace/io/batch/archive/referential/bank/in"
            - name:  TRYTOND_BATCH_BANK___COG_DATA_IMPORT__FILE_FORMAT
              value: "banque_de_france"
            - name:  TRYTOND_BATCH_BANK___COG_DATA_IMPORT__IN_DIRECTORY
              value: "/workspace/io/batch/referential/bank/in"
            - name:  TRYTOND_BATCH_BANK___COG_DATA_IMPORT__UPDATE
              value: "1"
            - name:  TRYTOND_BATCH_BATCH_ALMERYS_FEEDBACK__ARCHIVE_PATH
              value: "/workspace/io/batch/archive/almerys/flux_v3_in"
            - name:  TRYTOND_BATCH_BATCH_ALMERYS_FEEDBACK__IN_PATH
              value: "/workspace/io/batch/almerys/flux_v3_in"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_CLAIM___INDEMNIFICATION__ERROR_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_in/error"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_CLAIM___INDEMNIFICATION__IN_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_in"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_CLAIM___INDEMNIFICATION__JOB_SIZE
              value: "0"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_CLAIM___INDEMNIFICATION__OUT_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_in/statement"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_PAYBACK___CREATION__ERROR_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_indus_in/error"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_PAYBACK___CREATION__IN_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_indus_in"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_PAYBACK___CREATION__OUT_DIRECTORY
              value: "/workspace/io/batch/archive/almerys/flux_actuariat_indus_in"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_REGULARIZATION___CREATION__ERROR_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_in/error"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_REGULARIZATION___CREATION__IN_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_in/regularization"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_REGULARIZATION___CREATION__OUT_DIRECTORY
              value: "/workspace/io/batch/archive/almerys/flux_actuariat_in"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_STATEMENT___CREATION__ERROR_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_in/error"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_STATEMENT___CREATION__IN_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_in/statement"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_STATEMENT___CREATION__OUT_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_in/reject"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_STATEMENT___REJECT__ERROR_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_in/error"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_STATEMENT___REJECT__IN_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_in/reject"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_STATEMENT___REJECT__OUT_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_in/regularization"
            - name:  TRYTOND_BATCH_CONTRACT_INVOICE_CREATE__JOB_SIZE
              value: "250"
            - name:  TRYTOND_BATCH_CONTRACT_INVOICE_POST__JOB_SIZE
              value: "250"
            - name:  TRYTOND_BATCH_CONTRACT_NOEMIE_FLOW_BATCH__IN_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_929_in"
            - name:  TRYTOND_BATCH_CONTRACT_NOEMIE_FLOW_BATCH__JOB_SIZE
              value: "0"
            - name:  TRYTOND_BATCH_CONTRACT_NOEMIE_FLOW_BATCH__OUT_DIRECTORY
              value: "/workspace/io/batch/archive/almerys/flux_929_in"
            - name:  TRYTOND_BATCH_CONTRACT_RENEW__JOB_SIZE
              value: "10"
            - name:  TRYTOND_BATCH_CONTRACT_RENEW__RETRY
              value: "5"
            - name:  TRYTOND_BATCH_COUNTRY_ZIPCODE_UPDATE___FROM___HEXAPOST__ARCHIVE_PATH
              value: ""
            - name:  TRYTOND_BATCH_COUNTRY_ZIPCODE_UPDATE___FROM___HEXAPOST__HEXA_POST_FILE_PATH
              value: ""
            - name:  TRYTOND_BATCH_DESYNCHRONIZED_PREPAYMENT_REPORT__AUTO_ADJUST
              value: ""
            - name:  TRYTOND_BATCH_DESYNCHRONIZED_PREPAYMENT_REPORT__FILENAME
              value: ""
            - name:  TRYTOND_BATCH_DESYNCHRONIZED_REDEEMED_REPORT__AUTO_ADJUST
              value: ""
            - name:  TRYTOND_BATCH_DESYNCHRONIZED_REDEEMED_REPORT__FILENAME
              value: ""
            - name:  TRYTOND_BATCH_GESTIP_FLUX_PROCESS__DIRECTORY
              value: "/workspace/io/batch/prest_ij/gestip"
            - name:  TRYTOND_BATCH_GIE_CRM_IN__ARCHIVE
              value: "/workspace/io/batch/archive/crm/crm_in"
            - name:  TRYTOND_BATCH_GIE_CRM_IN__DISABLE
              value: "1"
            - name:  TRYTOND_BATCH_GIE_CRM_IN__IN_DIRECTORY
              value: "/workspace/io/batch/crm/crm_in"
            - name:  TRYTOND_BATCH_GIE_CRM_OUT__DISABLE
              value: "1"
            - name:  TRYTOND_BATCH_GIE_CRM_OUT__OUTPUT_PATH
              value: "/workspace/io/batch/crm/crm_out"
            - name:  TRYTOND_BATCH_INSURER___REPORTING_CONTRACT_GENERATE__POSSIBLE_DAYS
              value: ""
            - name:  TRYTOND_BATCH_INSURER___REPORTING_CONTRACT_GENERATE__PRODUCTS
              value: ""
            - name:  TRYTOND_BATCH_MADELIN_LAW_REPORT__TEMPLATE_CODE
              value: ""
            - name:  TRYTOND_BATCH_PARTY_PASRAU_RATE_BATCH__DIRECTORY
              value: "/workspace/io/batch/prest_ij/rates"
            - name:  TRYTOND_BATCH_PREST___IJ_PERIODS_BATCH__DIRECTORY
              value: "/workspace/io/batch/prest_ij/periods"
            - name:  TRYTOND_BATCH_PREST___IJ_SUBSCRIPTION_PROCESS__OUTPUT_DIR
              value: "/workspace/io/batch/prest_ij/subscriptions"
            - name:  TRYTOND_BATCH_REPORT_DOCUMENT_REQUEST_PROCESS__ROOT_DIR
              value: "/workspace/io/batch/report"
            - name:  TRYTOND_BATCH_REPORT__ENV_NAME
              value: "SMENO Recette"
            - name:  TRYTOND_BATCH_REPORT__FROMEMAIL
              value: "bot@coopengo.com"
            - name:  TRYTOND_BATCH_REPORT__TEMPLATE
              value: "/workspace/coog/bin/bin/template/default_batch_template.html"
            - name:  TRYTOND_BATCH_REPORT__TOEMAIL
              value: "support-gie@coopengo.com,assistance-informatique@smeno.fr"
            - name:  TRYTOND_BATCH_REPORT___PRODUCTION_CONTRACT___REQUEST_CREATE__PRODUCTS
              value: ""
            - name:  TRYTOND_BATCH_THIRD___PARTY___PROTOCOL_BATCH_ALMERYS__DIRECTORY
              value: "/workspace/io/batch/almerys/flux_v3_out"
            - name:  TRYTOND_BATCH_THIRD___PARTY___PROTOCOL_BATCH_ALMERYS__KEEP_COPY
              value: "/workspace/io/batch/almerys/flux_v3_out_backup"
            - name:  TRYTOND_DATABASE__LANGUAGE
              value: "fr"
            - name: TRYTOND_DATABASE__LANGUAGE
              value: fr

          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            periodSeconds: 60
            timeoutSeconds: 10
            exec:
              command:
                - "/bin/bash"
                - "-c"
                - "celery -A coog_async.coog_celery inspect ping -d celery@$HOSTNAME"
            initialDelaySeconds: 30
            periodSeconds: 120
            timeoutSeconds: 10
          readinessProbe:
            periodSeconds: 30
            timeoutSeconds: 10
            exec:
              command:
                - "/bin/bash"
                - "-c"
                - "celery -A coog_async.coog_celery inspect ping -d celery@$HOSTNAME"
          resources:
            limits:
              cpu: 400m
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 300Mi
---
# Source: coog/templates/coog/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-coog-coog
  labels:
    app.kubernetes.io/name: coog-coog
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: coog-coog
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: coog-coog
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: docker-registry
      volumes:
        - name: release-name-workspace-io
          persistentVolumeClaim:
            claimName: release-name-workspace-io
        - name: release-name-configuration
          configMap:
            name: release-name-configuration
      initContainers:
        - name: "coog-module-update"
          image: "cooghub/coog-gie:gie-coog-2.12.2218"
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            procMount: Default
            runAsNonRoot: true
            runAsUser: 1000
          resources:
            limits:
              cpu: 500m
              memory: 800Mi
            requests:
              cpu: 400m
              memory: 400Mi
          command: ['sh', '-c', 'ep admin -cu ir res --activate-dependencies']
          env:
            - name:  COOG_SERVER_WORKERS
              value: "2"
            - name:  COOG_TIMEOUT
              value: "3600"
            - name:  LOG_LEVEL
              value: "WARNING"
            - name:  COOG_POSTGRES_HOST
              value: "${db_instance_address}"
            - name:  COOG_POSTGRES_PORT
              value: "${db_instance_port}"
            - name:  COOG_DB_NAME
              value: "${client}_${subdomain}"
            - name:  COOG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: coog-postgres-db-secret
                  key: USER
            - name:  COOG_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: coog-postgres-db-secret
                  key: PASSWORD
            - name:  ADMIN_DB_PASSWORD
              value: ""
            - name:  ADMIN_DB_USER
              value: ""
            - name:  TRYTOND_BATCH__DAILY
              value: "gie"
            - name:  TRYTOND_DATABASE__PATH
              value: "/workspace/io/edm"
            - name:  TRYTOND_OPTIONS__TABLE_DIMENSION
              value: "10"
            - name:  TRYTOND_REPORT__EXPORT_ROOT_DIR
              value: "/workspace/io/batch/report"
            - name:  TRYTOND_REPORT__UNOCONV_RETRY
              value: "5"
            - name:  TRYTOND_SEPA_PAYMENT__OUT_DIR
              value: "/workspace/io/batch/sepa/sepa_out"
            - name: TRYTOND_BATCH__ENABLE_CELERY_AUTO_SCALING
              value: "1"
            - name: TRYTOND_CACHE__RECORD
              value: "60000"
            - name:  TRYTOND_ASYNC__CELERY
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_ASYNC__CELERY
            - name:  TRYTOND_ASYNC_CELERY
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_ASYNC__CELERY
            - name:  TRYTOND_DATABASE__URI
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_DATABASE__URI
            - name: TRYTOND_DATABASE__LANGUAGE
              value: fr
            - name:  TRYTOND_DEBUG__DISABLE_SYNTAX_ANALYSIS
              value: "True"
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
      containers:
        - name: coog-coog
          image: "cooghub/coog-gie:gie-coog-2.12.2218"
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            procMount: Default
            runAsNonRoot: true
            runAsUser: 1000
          command:
            - ep
            - server
            - "2"
          volumeMounts:
            - name: release-name-workspace-io
              mountPath: /workspace/io
              readOnly: false
            - name: release-name-configuration
              mountPath: /workspace/batch.conf
              subPath: batch.conf
            - name: release-name-configuration
              mountPath: /workspace/coog.conf
              subPath: coog.conf
          env:
            - name:  COOG_SERVER_WORKERS
              value: "2"
            - name:  COOG_TIMEOUT
              value: "3600"
            - name:  LOG_LEVEL
              value: "WARNING"
            - name:  COOG_POSTGRES_HOST
              value: "${db_instance_address}"
            - name:  COOG_POSTGRES_PORT
              value: "${db_instance_port}"
            - name:  COOG_DB_NAME
              value: "${client}_${subdomain}"
            - name:  COOG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: coog-postgres-db-secret
                  key: USER
            - name:  COOG_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: coog-postgres-db-secret
                  key: PASSWORD
            - name:  ADMIN_DB_PASSWORD
              value: ""
            - name:  ADMIN_DB_USER
              value: ""
            - name:  TRYTOND_BATCH__DAILY
              value: "gie"
            - name:  TRYTOND_DATABASE__PATH
              value: "/workspace/io/edm"
            - name:  TRYTOND_OPTIONS__TABLE_DIMENSION
              value: "10"
            - name:  TRYTOND_REPORT__EXPORT_ROOT_DIR
              value: "/workspace/io/batch/report"
            - name:  TRYTOND_REPORT__UNOCONV_RETRY
              value: "5"
            - name:  TRYTOND_SEPA_PAYMENT__OUT_DIR
              value: "/workspace/io/batch/sepa/sepa_out"
            - name:  TRYTOND_ASYNC__CELERY
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_ASYNC__CELERY
            - name:  TRYTOND_ASYNC_CELERY
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_ASYNC__CELERY
            - name:  TRYTOND_CACHE__CLEAN_TIMEOUT
              value: "0"
            - name:  TRYTOND_DATABASE__URI
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_DATABASE__URI
            - name: TRYTOND_DATABASE__LANGUAGE
              value: fr
            - name: TRYTOND_EMAIL__URI
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_EMAIL__URI
            - name: TRYTOND_SESSION__PASSPHRASE
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_SESSION__PASSPHRASE
            - name: TRYTOND_BATCH_REPORT__URI
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_BATCH_REPORT__URI
            - name: TRYTOND_EMAIL__FROM
              value: "noreply@smeno.fr"
            - name: TRYTOND_REPORT__UNOCONV
              value: "True"
            - name:  TRYTOND_DEBUG__VIEWS
              value: "False"
            - name:  TRYTOND_DEBUG__DISABLE_SYNTAX_ANALYSIS
              value: "True"
            - name: TRYTOND_REPORT__API
              value: "http://release-name-coog-unoconv:5000/unoconv/{oext}"
            - name: COOG_IWC
              value: "1"
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /liveness
              port: http
            exec:
            periodSeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: "/${client}_${subdomain}/readiness"
              port: http
            exec:
            periodSeconds: 30
            timeoutSeconds: 30
          resources:
            limits:
              cpu: 1500m
              memory: 1750Mi
            requests:
              cpu: 200m
              memory: 300Mi
---
# Source: coog/templates/cron/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-coog-cron
  labels:
    app.kubernetes.io/name: coog-cron
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: coog-cron
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: coog-cron
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: docker-registry
      volumes:
        - name: release-name-workspace-io
          persistentVolumeClaim:
            claimName: release-name-workspace-io
      containers:
        - name: coog-cron
          image: "cooghub/coog-gie:gie-coog-2.12.2218"
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            procMount: Default
            runAsNonRoot: true
            runAsUser: 1000
          command:
            - "ep"
            - "cron"
          volumeMounts:
            - name: release-name-workspace-io
              mountPath: /workspace/io
              readOnly: false
          env:
            - name:  COOG_SERVER_WORKERS
              value: "2"
            - name:  COOG_CELERY_WORKERS
              value: "2"
            - name:  COOG_TIMEOUT
              value: "3600"
            - name:  LOG_LEVEL
              value: "WARNING"
            - name:  COOG_POSTGRES_HOST
              value: "${db_instance_address}"
            - name:  COOG_POSTGRES_PORT
              value: "${db_instance_port}"
            - name:  COOG_DB_NAME
              value: "${client}_${subdomain}"
            - name:  COOG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: coog-postgres-db-secret
                  key: USER
            - name:  COOG_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: coog-postgres-db-secret
                  key: PASSWORD
            - name:  ADMIN_DB_PASSWORD
              value: ""
            - name:  ADMIN_DB_USER
              value: ""
            - name:  TRYTOND_BATCH__DAILY
              value: "gie"
            - name:  TRYTOND_DATABASE__PATH
              value: "/workspace/io/edm"
            - name:  TRYTOND_OPTIONS__TABLE_DIMENSION
              value: "10"
            - name:  TRYTOND_REPORT__EXPORT_ROOT_DIR
              value: "/workspace/io/batch/report"
            - name:  TRYTOND_REPORT__UNOCONV_RETRY
              value: "5"
            - name:  TRYTOND_SEPA_PAYMENT__OUT_DIR
              value: "/workspace/io/batch/sepa/sepa_out"
            - name: TRYTOND_CACHE__RECORD
              value: "60000"
            - name:  TRYTOND_ASYNC__CELERY
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_ASYNC__CELERY
            - name:  TRYTOND_ASYNC_CELERY
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_ASYNC__CELERY
            - name:  TRYTOND_CACHE__CLEAN_TIMEOUT
              value: "0"
            - name:  TRYTOND_DATABASE__URI
              valueFrom:
                secretKeyRef:
                  name: coog-trytond-secret
                  key: TRYTOND_DATABASE__URI
            - name:  TRYTOND_DEBUG__VIEWS
              value: "False"
            - name:  TRYTOND_DEBUG__DISABLE_SYNTAX_ANALYSIS
              value: "True"
            - name: TRYTOND_REPORT__API
              value: "http://release-name-coog-unoconv:5000/unoconv/{oext}"
            - name: COOG_IWC
              value: "1"
            - name: TRYTOND_DATABASE__LANGUAGE
              value: fr
            - name:  TRYTOND_BATCH_ACCOUNT_AGED___BALANCE_GENERATE__OUTPUT_DIR
              value: "/workspace/io/batch/compta/balance_out"
            - name:  TRYTOND_BATCH_ACCOUNT_AGED___BALANCE_GENERATE__POSTED
              value: "1"
            - name:  TRYTOND_BATCH_ACCOUNT_AGED___BALANCE_GENERATE__TERM1
              value: "30"
            - name:  TRYTOND_BATCH_ACCOUNT_AGED___BALANCE_GENERATE__TERM2
              value: "60"
            - name:  TRYTOND_BATCH_ACCOUNT_AGED___BALANCE_GENERATE__TERM3
              value: "90"
            - name:  TRYTOND_BATCH_ACCOUNT_AGED___BALANCE_GENERATE__TYPE
              value: "customer"
            - name:  TRYTOND_BATCH_ACCOUNT_AGED___BALANCE_GENERATE__UNIT
              value: "day"
            - name:  TRYTOND_BATCH_ACCOUNT_DUNNING_TREAT__JOB_SIZE
              value: "0"
            - name:  TRYTOND_BATCH_ACCOUNT_MOVE_AGGREGATED_EXTRACT__FLUSH_SIZE
              value: "1000"
            - name:  TRYTOND_BATCH_ACCOUNT_MOVE_AGGREGATED_EXTRACT__OUTPUT_DIR
              value: "/workspace/io/batch/compta/compta_out"
            - name:  TRYTOND_BATCH_ACCOUNT_MOVE_SNAPSHOT_EXPORT__JOB_SIZE
              value: "0"
            - name:  TRYTOND_BATCH_ACCOUNT_MOVE_SNAPSHOT_TAKE__JOB_SIZE
              value: "0"
            - name:  TRYTOND_BATCH_ACCOUNT_PAYMENT_ACKNOWLEDGE__AUTO_ACKNOWLEDGE
              value: "1"
            - name:  TRYTOND_BATCH_ACCOUNT_PAYMENT_FAIL_MESSAGE_CREATE__ARCHIVE
              value: "/workspace/io/batch/archive/sepa/sepa_in"
            - name:  TRYTOND_BATCH_ACCOUNT_PAYMENT_FAIL_MESSAGE_CREATE__IN_DIRECTORY
              value: "/workspace/io/batch/sepa/sepa_in"
            - name:  TRYTOND_BATCH_ACCOUNT_PAYMENT_FAIL__IN_DIRECTORY
              value: "/workspace/io/batch/sepa/sepa_in"
            - name:  TRYTOND_BATCH_ACCOUNT_PAYMENT_GROUP_CREATE__JOB_SIZE
              value: "0"
            - name:  TRYTOND_BATCH_ACCOUNT_PAYMENT_GROUP_PROCESS__CACHE_SIZE
              value: "100000"
            - name:  TRYTOND_BATCH_ACCOUNT_PAYMENT_PROCESS__JOB_SIZE
              value: "0"
            - name:  TRYTOND_BATCH_ACCOUNT_PAYMENT_SUCCEED__AUTO_ACKNOWLEDGE
              value: "1"
            - name:  TRYTOND_BATCH_ACCOUNT_PAYMENT_TREATMENT__JOB_SIZE
              value: "0"
            - name:  TRYTOND_BATCH_ACCOUNT_PAYMENT_UPDATE__RETRY
              value: "1"
            - name:  TRYTOND_BATCH_ACCOUNT_STATEMENT_LINE_REJECT__IN_DIRECTORY
              value: "/workspace/io/batch/almerys/rejet_in"
            - name:  TRYTOND_BATCH_ACCOUNT_STATEMENT_LINE_REJECT__OUT_DIRECTORY
              value: "/workspace/io/batch/archive/almerys/rejet_in"
            - name:  TRYTOND_BATCH_BANK_MOBILITY__ARCHIVE
              value: "/workspace/io/batch/archive/sepa/mobility_in"
            - name:  TRYTOND_BATCH_BANK_MOBILITY__IN_DIRECTORY
              value: "/workspace/io/batch/sepa/mobility_in"
            - name:  TRYTOND_BATCH_BANK___COG_DATA_IMPORT__ARCHIVE
              value: "/workspace/io/batch/archive/referential/bank/in"
            - name:  TRYTOND_BATCH_BANK___COG_DATA_IMPORT__FILE_FORMAT
              value: "banque_de_france"
            - name:  TRYTOND_BATCH_BANK___COG_DATA_IMPORT__IN_DIRECTORY
              value: "/workspace/io/batch/referential/bank/in"
            - name:  TRYTOND_BATCH_BANK___COG_DATA_IMPORT__UPDATE
              value: "1"
            - name:  TRYTOND_BATCH_BATCH_ALMERYS_FEEDBACK__ARCHIVE_PATH
              value: "/workspace/io/batch/archive/almerys/flux_v3_in"
            - name:  TRYTOND_BATCH_BATCH_ALMERYS_FEEDBACK__IN_PATH
              value: "/workspace/io/batch/almerys/flux_v3_in"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_CLAIM___INDEMNIFICATION__ERROR_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_in/error"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_CLAIM___INDEMNIFICATION__IN_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_in"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_CLAIM___INDEMNIFICATION__JOB_SIZE
              value: "0"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_CLAIM___INDEMNIFICATION__OUT_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_in/statement"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_PAYBACK___CREATION__ERROR_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_indus_in/error"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_PAYBACK___CREATION__IN_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_indus_in"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_PAYBACK___CREATION__OUT_DIRECTORY
              value: "/workspace/io/batch/archive/almerys/flux_actuariat_indus_in"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_REGULARIZATION___CREATION__ERROR_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_in/error"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_REGULARIZATION___CREATION__IN_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_in/regularization"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_REGULARIZATION___CREATION__OUT_DIRECTORY
              value: "/workspace/io/batch/archive/almerys/flux_actuariat_in"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_STATEMENT___CREATION__ERROR_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_in/error"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_STATEMENT___CREATION__IN_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_in/statement"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_STATEMENT___CREATION__OUT_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_in/reject"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_STATEMENT___REJECT__ERROR_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_in/error"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_STATEMENT___REJECT__IN_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_in/reject"
            - name:  TRYTOND_BATCH_CLAIM_ALMERYS_STATEMENT___REJECT__OUT_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_actuariat_in/regularization"
            - name:  TRYTOND_BATCH_CONTRACT_INVOICE_CREATE__JOB_SIZE
              value: "250"
            - name:  TRYTOND_BATCH_CONTRACT_INVOICE_POST__JOB_SIZE
              value: "250"
            - name:  TRYTOND_BATCH_CONTRACT_NOEMIE_FLOW_BATCH__IN_DIRECTORY
              value: "/workspace/io/batch/almerys/flux_929_in"
            - name:  TRYTOND_BATCH_CONTRACT_NOEMIE_FLOW_BATCH__JOB_SIZE
              value: "0"
            - name:  TRYTOND_BATCH_CONTRACT_NOEMIE_FLOW_BATCH__OUT_DIRECTORY
              value: "/workspace/io/batch/archive/almerys/flux_929_in"
            - name:  TRYTOND_BATCH_CONTRACT_RENEW__JOB_SIZE
              value: "10"
            - name:  TRYTOND_BATCH_CONTRACT_RENEW__RETRY
              value: "5"
            - name:  TRYTOND_BATCH_COUNTRY_ZIPCODE_UPDATE___FROM___HEXAPOST__ARCHIVE_PATH
              value: ""
            - name:  TRYTOND_BATCH_COUNTRY_ZIPCODE_UPDATE___FROM___HEXAPOST__HEXA_POST_FILE_PATH
              value: ""
            - name:  TRYTOND_BATCH_DESYNCHRONIZED_PREPAYMENT_REPORT__AUTO_ADJUST
              value: ""
            - name:  TRYTOND_BATCH_DESYNCHRONIZED_PREPAYMENT_REPORT__FILENAME
              value: ""
            - name:  TRYTOND_BATCH_DESYNCHRONIZED_REDEEMED_REPORT__AUTO_ADJUST
              value: ""
            - name:  TRYTOND_BATCH_DESYNCHRONIZED_REDEEMED_REPORT__FILENAME
              value: ""
            - name:  TRYTOND_BATCH_GESTIP_FLUX_PROCESS__DIRECTORY
              value: "/workspace/io/batch/prest_ij/gestip"
            - name:  TRYTOND_BATCH_GIE_CRM_IN__ARCHIVE
              value: "/workspace/io/batch/archive/crm/crm_in"
            - name:  TRYTOND_BATCH_GIE_CRM_IN__DISABLE
              value: "1"
            - name:  TRYTOND_BATCH_GIE_CRM_IN__IN_DIRECTORY
              value: "/workspace/io/batch/crm/crm_in"
            - name:  TRYTOND_BATCH_GIE_CRM_OUT__DISABLE
              value: "1"
            - name:  TRYTOND_BATCH_GIE_CRM_OUT__OUTPUT_PATH
              value: "/workspace/io/batch/crm/crm_out"
            - name:  TRYTOND_BATCH_INSURER___REPORTING_CONTRACT_GENERATE__POSSIBLE_DAYS
              value: ""
            - name:  TRYTOND_BATCH_INSURER___REPORTING_CONTRACT_GENERATE__PRODUCTS
              value: ""
            - name:  TRYTOND_BATCH_MADELIN_LAW_REPORT__TEMPLATE_CODE
              value: ""
            - name:  TRYTOND_BATCH_PARTY_PASRAU_RATE_BATCH__DIRECTORY
              value: "/workspace/io/batch/prest_ij/rates"
            - name:  TRYTOND_BATCH_PREST___IJ_PERIODS_BATCH__DIRECTORY
              value: "/workspace/io/batch/prest_ij/periods"
            - name:  TRYTOND_BATCH_PREST___IJ_SUBSCRIPTION_PROCESS__OUTPUT_DIR
              value: "/workspace/io/batch/prest_ij/subscriptions"
            - name:  TRYTOND_BATCH_REPORT_DOCUMENT_REQUEST_PROCESS__ROOT_DIR
              value: "/workspace/io/batch/report"
            - name:  TRYTOND_BATCH_REPORT__ENV_NAME
              value: "SMENO Recette"
            - name:  TRYTOND_BATCH_REPORT__FROMEMAIL
              value: "bot@coopengo.com"
            - name:  TRYTOND_BATCH_REPORT__TEMPLATE
              value: "/workspace/coog/bin/bin/template/default_batch_template.html"
            - name:  TRYTOND_BATCH_REPORT__TOEMAIL
              value: "support-gie@coopengo.com,assistance-informatique@smeno.fr"
            - name:  TRYTOND_BATCH_REPORT___PRODUCTION_CONTRACT___REQUEST_CREATE__PRODUCTS
              value: ""
            - name:  TRYTOND_BATCH_THIRD___PARTY___PROTOCOL_BATCH_ALMERYS__DIRECTORY
              value: "/workspace/io/batch/almerys/flux_v3_out"
            - name:  TRYTOND_BATCH_THIRD___PARTY___PROTOCOL_BATCH_ALMERYS__KEEP_COPY
              value: "/workspace/io/batch/almerys/flux_v3_out_backup"
            - name:  TRYTOND_DATABASE__LANGUAGE
              value: "fr"
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - "/bin/bash"
                - "-c"
                - "ep cron --check"
            failureThreshold: 2
            initialDelaySeconds: 30
            periodSeconds: 120
            successThreshold: 1
            timeoutSeconds: 10
          startupProbe:
            exec:
              command:
                - "/bin/bash"
                - "-c"
                - "ep cron --check"
            failureThreshold: 2
            initialDelaySeconds: 30
            periodSeconds: 120
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 200m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 300Mi
---
# Source: coog/templates/gateway/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-coog-gateway
  labels:
    app.kubernetes.io/name: coog-gateway
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: coog-gateway
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: coog-gateway
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: docker-registry
      containers:
        - name: coog-gateway
          image: "cooghub/coog-gateway:coog-2.12.2218"
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            procMount: Default
            runAsNonRoot: true
            runAsUser: 1000
          env:
            - name:  COOG_PORTAL_URL
              value: "https://${client}.${subdomain}.coog.io"
            - name:  MONGO_HOST
              value: "release-name-mongodb"
            - name:  MONGO_PORT
              value: "27017"
            - name:  MONGO_DB_NAME
              value: "coog-gateway"
            - name:  JWT_ENCRYPTION
              value: "secret"
            - name:  JWT_INTERNAL_ENCRYPTION
              value: "secret"
            - name:  JWT_EXPIRATION
              value: "3600"
            - name:  COOG_API_URL
              value: "http://release-name-coog-web"
            - name:  COOG_API_URL_V2
              value: "http://release-name-coog-api"
            - name:  COOG_API_B2B_CONFIG_URL
              value: "http://release-name-coog-api-b2b-config"
            - name:  COOG_API_B2C_URL
              value: "http://release-name-coog-api-b2c"
            - name:  COOG_API_REFERENTIAL_URL
              value: "http://release-name-coog-api-referential"
            - name:  COOG_API_IDENTITY_MANAGER_URL
              value: "http://release-name-coog-api-identity-manager"
            - name:  COOG_WEB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: coog-gateway-web-secret
                  key: GATEWAY_TOKEN
            - name:  COOG_MODULE
              value: "true"
            - name:  GOOGLE_MODULE
              value: "false"
            - name:  FACEBOOK_MODULE
              value: "false"
            - name:  MONGO_USER
              valueFrom:
                secretKeyRef:
                  name: coog-gateway-mongo-db-secret
                  key: USER
            - name:  MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: coog-gateway-mongo-db-secret
                  key: PASSWORD
            - name:  COOG_GATEWAY_URL
              value: "https://${client}.${subdomain}.coog.io"
            - name:  COOG_GATEWAY_BASE_PATH
              value: "/gateway"
            - name:  COOG_URL
              value: "http://release-name-coog-coog"
            - name:  COOG_DB_NAME
              value: "${client}_${subdomain}"
            - name:  COOG_GATEWAY_PORT
              value: "8000"
            - name:  COOG_TOKEN_MODULE
              value: "true"
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 50Mi
---
# Source: coog/templates/static/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-coog-static
  labels:
    app.kubernetes.io/name: coog-static
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: coog-static
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: coog-static
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: docker-registry
      containers:
        - name: coog-static
          image: "cooghub/coog-static:coog-2.12.2218"
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            procMount: Default
            runAsNonRoot: true
            runAsUser: 1000
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /doc
              port: http
          readinessProbe:
            httpGet:
              path: /doc
              port: http
          resources:
            limits:
              cpu: 50m
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 20Mi
---
# Source: coog/templates/unoconv/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-coog-unoconv
  labels:
    app.kubernetes.io/name: coog-unoconv
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: coog-unoconv
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: coog-unoconv
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: docker-registry
      containers:
        - name: coog-unoconv
          image: "cooghub/coog-libroconv:coog-2.12.2218"
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            procMount: Default
            runAsNonRoot: true
            runAsUser: 1000
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /liveness
              port: http
            initialDelaySeconds: 0
            periodSeconds: 60
            timeoutSeconds: 30
            successThreshold: 1
            failureThreshold: 1
          readinessProbe:
            httpGet:
              path: /liveness
              port: http
            initialDelaySeconds: 0
            periodSeconds: 30
            timeoutSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 50m
              memory: 50Mi
---
# Source: coog/templates/web/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-coog-web
  labels:
    app.kubernetes.io/name: coog-web
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: coog-web
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: coog-web
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: docker-registry
      containers:
        - name: coog-web
          image: "cooghub/coog-web:coog-2.12.2218"
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            procMount: Default
            runAsNonRoot: true
            runAsUser: 1000
          env:
            - name: COOG_API_MONGO_HOST
              value: "release-name-mongodb"
            
            - name: COOG_API_MONGO_PORT
              value: "27017"
            
            - name: COOG_API_COOG_URL
              value: "http://release-name-coog-coog:80"
            - name: COOG_API_COOG_DB
              value: "${client}_${subdomain}"
            - name: COOG_API_API_PATH
              value: "/web/api"
            - name: COOG_API_APP_PATH
              value: "/web"
            - name:  COOG_API_MONGO_USER
              valueFrom:
                secretKeyRef:
                  name: coog-gateway-mongo-db-secret
                  key: USER
            - name:  COOG_API_MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: coog-gateway-mongo-db-secret
                  key: PASSWORD
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /auth
              port: http
            exec:
            periodSeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /auth
              port: http
          resources:
            limits:
              cpu: 500m
              memory: 200Mi
            requests:
              cpu: 30m
              memory: 30Mi
---
# Source: coog/charts/rabbitmq/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-rabbitmq
  namespace: default
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-7.6.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: release-name-rabbitmq-headless
  podManagementPolicy: OrderedReady
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: rabbitmq
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rabbitmq
        helm.sh/chart: rabbitmq-7.6.8
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/secret: af5f2d0fd41fdb1c0bb6209e240628671c92304aed69049218c71279e671719f
    spec:
      
      serviceAccountName: release-name-rabbitmq
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      terminationGracePeriodSeconds: 10
      containers:
        - name: rabbitmq
          image: docker.io/bitnami/rabbitmq:3.8.9-debian-10-r0
          imagePullPolicy: "IfNotPresent"
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: K8S_SERVICE_NAME
              value: "release-name-rabbitmq-headless"
            - name: K8S_ADDRESS_TYPE
              value: hostname
            - name: RABBITMQ_FORCE_BOOT
              value: "no"
            - name: RABBITMQ_NODE_NAME
              value: "rabbit@$(MY_POD_NAME).$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local"
            - name: K8S_HOSTNAME_SUFFIX
              value: ".$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local"
            - name: RABBITMQ_MNESIA_DIR
              value: "/bitnami/rabbitmq/mnesia/$(RABBITMQ_NODE_NAME)"
            - name: RABBITMQ_LDAP_ENABLE
              value: "no"
            - name: RABBITMQ_LOGS
              value: "-"
            - name: RABBITMQ_ULIMIT_NOFILES
              value: "65536"
            - name: RABBITMQ_USE_LONGNAME
              value: "true"
            - name: RABBITMQ_ERL_COOKIE
              valueFrom:
                secretKeyRef:
                  name: release-name-rabbitmq
                  key: rabbitmq-erlang-cookie
            - name: RABBITMQ_USERNAME
              value: "root"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-rabbitmq
                  key: rabbitmq-password
            - name: RABBITMQ_PLUGINS
              value: "rabbitmq_management, rabbitmq_peer_discovery_k8s, rabbitmq_auth_backend_ldap"
          ports:
            - name: amqp
              containerPort: 5672
            - name: dist
              containerPort: 25672
            - name: stats
              containerPort: 15672
            - name: epmd
              containerPort: 4369
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - rabbitmq-diagnostics -q check_running
            initialDelaySeconds: 240
            periodSeconds: 30
            timeoutSeconds: 20
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - rabbitmq-diagnostics -q check_running
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 20
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: 600m
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 100Mi
          lifecycle:
            preStop:
              exec:
                command:
                  - bash
                  - -ec
                  - rabbitmqctl stop_app
          volumeMounts:
            - name: configuration
              mountPath: /bitnami/rabbitmq/conf
            - name: data
              mountPath: /bitnami/rabbitmq/mnesia
      volumes:
        - name: configuration
          configMap:
            name: release-name-rabbitmq-config
            items:
              - key: rabbitmq.conf
                path: rabbitmq.conf
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: rabbitmq
          app.kubernetes.io/instance: release-name
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: coog/templates/coog/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-coog-coog
  labels:
    app.kubernetes.io/name: coog-coog
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
  annotations:
    nginx.ingress.kubernetes.io/whitelist-source-range: "127.0.0.1/32"
    cert-manager.io/cluster-issuer: "letsencrypt"
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/client-body-buffer-size: "100m"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/send-timeout: "3600"
    nginx.ingress.kubernetes.io/whitelist-source-range: "92.154.28.76/32,${default_ingress_whitelist},109.24.219.175/32,41.137.65.34/32,41.141.250.111/32,46.17.68.191/32,46.17.66.218/32,5.149.186.29/32,62.23.44.85/32,46.105.93.42/32,41.137.39.18/32,196.203.207.254/32,41.224.56.220/32,185.61.146.209/32,82.252.135.75/32,163.172.95.59/32,5.149.186.10/32,176.157.137.249/32,85.31.195.214/32,46.17.68.188/32,46.17.65.112/28,193.238.148.138/32,193.238.148.139/32,91.195.164.7/32,31.36.113.187/32,46.17.65.225/32,145.226.0.0/16,82.64.202.172/32"
spec:
  tls:
    - hosts:
        - "${client}.${subdomain}.coog.io"
      secretName: coog-server-tls
  rules:
    - host: "${client}.${subdomain}.coog.io"
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: release-name-coog-coog
              port:
                name: http
---
# Source: coog/templates/gateway/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-coog-gateway
  labels:
    app.kubernetes.io/name: coog-gateway
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: "/$2"
    nginx.ingress.kubernetes.io/whitelist-source-range: "127.0.0.1/32"
    cert-manager.io/cluster-issuer: "letsencrypt"
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/client-body-buffer-size: "100m"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/rewrite-target: "/$2"
    nginx.ingress.kubernetes.io/send-timeout: "3600"
    nginx.ingress.kubernetes.io/whitelist-source-range: "92.154.28.76/32,${default_ingress_whitelist},109.24.219.175/32,41.137.65.34/32,41.141.250.111/32,46.17.68.191/32,46.17.66.218/32,5.149.186.29/32,62.23.44.85/32,46.105.93.42/32,41.137.39.18/32,196.203.207.254/32,41.224.56.220/32,185.61.146.209/32,82.252.135.75/32,163.172.95.59/32,5.149.186.10/32,176.157.137.249/32,85.31.195.214/32,46.17.68.188/32,46.17.65.112/28,193.238.148.138/32,193.238.148.139/32,91.195.164.7/32,31.36.113.187/32,46.17.65.225/32,82.64.202.172/32"
spec:
  tls:
    - hosts:
        - "${client}.${subdomain}.coog.io"
      secretName: coog-server-tls
  rules:
    - host: "${client}.${subdomain}.coog.io"
      http:
        paths:
        - path: /gateway(/|$)(.*)
          pathType: Prefix
          backend:
            service:
              name: release-name-coog-gateway
              port:
                name: http
---
# Source: coog/templates/static/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-coog-static
  labels:
    app.kubernetes.io/name: coog-static
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
  annotations:
    nginx.ingress.kubernetes.io/whitelist-source-range: "127.0.0.1/32"
    cert-manager.io/cluster-issuer: "letsencrypt"
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/client-body-buffer-size: "100m"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/send-timeout: "3600"
    nginx.ingress.kubernetes.io/whitelist-source-range: "92.154.28.76/32,${default_ingress_whitelist},109.24.219.175/32,41.137.65.34/32,41.141.250.111/32,46.17.68.191/32,46.17.66.218/32,5.149.186.29/32,62.23.44.85/32,46.105.93.42/32,41.137.39.18/32,196.203.207.254/32,41.224.56.220/32,185.61.146.209/32,82.252.135.75/32,163.172.95.59/32,5.149.186.10/32,176.157.137.249/32,85.31.195.214/32,46.17.68.188/32,46.17.65.112/28,193.238.148.138/32,193.238.148.139/32,91.195.164.7/32,31.36.113.187/32,46.17.65.225/32,82.64.202.172/32"
spec:
  tls:
    - hosts:
        - "${client}.${subdomain}.coog.io"
      secretName: coog-server-tls
  rules:
    - host: "${client}.${subdomain}.coog.io"
      http:
        paths:
        - path: /sao
          pathType: Prefix
          backend:
            service:
              name: release-name-coog-static
              port:
                name: http
        - path: /bench
          pathType: Prefix
          backend:
            service:
              name: release-name-coog-static
              port:
                name: http
        - path: /doc
          pathType: Prefix
          backend:
            service:
              name: release-name-coog-static
              port:
                name: http
---
# Source: coog/templates/web/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-coog-web
  labels:
    app.kubernetes.io/name: coog-web
    helm.sh/chart: coog-22.28.2228
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "master"
    app.kubernetes.io/managed-by: Helm
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: "/$2"
    nginx.ingress.kubernetes.io/whitelist-source-range: "127.0.0.1/32"
    cert-manager.io/cluster-issuer: "letsencrypt"
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/client-body-buffer-size: "100m"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/rewrite-target: "/$2"
    nginx.ingress.kubernetes.io/send-timeout: "3600"
    nginx.ingress.kubernetes.io/whitelist-source-range: "92.154.28.76/32,${default_ingress_whitelist},109.24.219.175/32,41.137.65.34/32,41.141.250.111/32,46.17.68.191/32,46.17.66.218/32,5.149.186.29/32,62.23.44.85/32,46.105.93.42/32,41.137.39.18/32,196.203.207.254/32,41.224.56.220/32,185.61.146.209/32,82.252.135.75/32,163.172.95.59/32,5.149.186.10/32,176.157.137.249/32,85.31.195.214/32,46.17.68.188/32,46.17.65.112/28,193.238.148.138/32,193.238.148.139/32,91.195.164.7/32,31.36.113.187/32,46.17.65.225/32,82.64.202.172/32"
spec:
  tls:
    - hosts:
        - "${client}.${subdomain}.coog.io"
      secretName: coog-server-tls
  rules:
    - host: "${client}.${subdomain}.coog.io"
      http:
        paths:
        - path: /web/api(/|$)(.*)
          pathType: Prefix
          backend:
            service:
              name: release-name-coog-web
              port:
                name: http
