{{- if (or .Values.frontCore.enabled
          .Values.apiB2c.enabled
          .Values.apiReferential.enabled
          .Values.b2c.enabled
          .Values.b2b.enabled
          .Values.customerBackend.enabled
          .Values.customerFrontend.enabled
          .Values.web.enabled)
-}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
spec:
  replicas: {{ default .Values.replicaCount .Values.gateway.replicaCount }}
  strategy:
  {{- if not .Values.quota.rollingUpdate }}
    type: Recreate
  {{- else -}}
    type: {{ default .Values.strategy.type .Values.gateway.strategy.type }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
    spec:
    {{- with .Values.image.pullSecrets }}
      imagePullSecrets: {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ include "common.names.name" . }}
          image: "{{ default .Values.image.repository .Values.gateway.image.repository }}/{{ .Values.gateway.image.name }}:{{ default .Values.image.tag .Values.gateway.image.tag }}"
          imagepullPolicy: {{ default .Values.image.pullPolicy .Values.gateway.image.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            procMount: Default
            runAsNonRoot: true
            runAsUser: {{ default .Values.securityContext.runAsUser .Values.gateway.securityContext.runAsUser }}
          envFrom:
            - configMapRef:
                name: {{ printf "%s-configuration" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}
            - configMapRef:
                name: {{ printf "%s-frontCore" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}
            - secretRef:
                name: {{ printf "%s-configuration" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}
            - secretRef:
                name: {{ printf "%s-%s-mongodb" .Release.Name .Chart.Name | trunc 63 | trimSuffix "-" }}
            - secretRef:
                name: {{ printf "%s-frontCore" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          startupProbe: {{- toYaml (default .Values.startupProbe .Values.gateway.startupProbe) | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            {{- toYaml (default .Values.livenessProbe .Values.gateway.livenessProbe) | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /
              port: http
            {{- toYaml (default .Values.readinessProbe .Values.gateway.readinessProbe) | nindent 12 }}
          resources: {{- toYaml .Values.gateway.resources | nindent 12 }}
      {{- with default .Values.nodeSelector .Values.gateway.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with default .Values.affinity .Values.gateway.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with default .Values.tolerations .Values.gateway.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if default .Values.dnsPolicy .Values.gateway.dnsPolicy }}
      dnsPolicy: {{ default .Values.dnsPolicy .Values.gateway.dnsPolicy }}
      {{- end }}
      {{- if default .Values.dnsConfig .Values.gateway.dnsConfig }}
      dnsConfig: {{- toYaml default .Values.dnsConfig .Values.gateway.dnsConfig | indent 8 }}
      {{- end }}
{{- end }}
