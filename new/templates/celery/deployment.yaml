apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
spec:
  replicas: {{ default .Values.replicaCount .Values.celery.replicaCount }}
  strategy:
    type: {{ default .Values.strategy.type .Values.coog.strategy.type }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
    spec:
    {{- with .Values.coog.imagePullSecrets }}
      imagePullSecrets: {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if .Values.coog.persistentVolume.enable }}
      volumes:
        - name: {{ printf "%s-%s" .Release.Name .Values.coog.persistentVolume.name | trunc 63 | trimSuffix "-" }}
          persistentVolumeClaim:
            claimname: {{ printf "%s-%s" .Release.Name .Values.coog.persistentVolume.name | trunc 63 | trimSuffix "-" }}
    {{- end }}
      containers:
        - name: {{ include "common.names.name" . }}
          image: "{{ default .Values.image.repository .Values.coog.image.repository }}/{{ .Values.coog.image.name }}:{{ default .Values.image.tag .Values.coog.image.tag }}"
          imagepullPolicy: {{ default .Values.image.pullPolicy .Values.coog.image.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            procMount: Default
            runAsNonRoot: true
            runAsUser: {{ .Values.coog.securityContext.runAsUser }}
          command: ['ep', 'celery', '{{ .Values.celery.workers.number }}']
        {{- if .Values.coog.persistentVolume.enable }}
          volumeMounts:
            - name: {{ printf "%s-%s" .Release.Name .Values.coog.persistentVolume.name | trunc 63 | trimSuffix "-" }}
              mountPath: /workspace/io
              readOnly: false
        {{- end }}
          env:
            - name:  COOG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-%s-database" .Release.Name .Chart.Name | trunc 63 | trimSuffix "-" }}
                  key: db-username
            - name:  COOG_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-%s-database" .Release.Name .Chart.Name | trunc 63 | trimSuffix "-" }}
                  key: db-password
            - name:  TRYTOND_ASYNC__CELERY
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-%s-configuration" .Release.Name .Chart.Name | trunc 63 | trimSuffix "-" }}
                  key: TRYTOND_ASYNC__CELERY
            - name:  TRYTOND_ASYNC_CELERY
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-%s-configuration" .Release.Name .Chart.Name | trunc 63 | trimSuffix "-" }}
                  key: TRYTOND_ASYNC__CELERY
            - name:  TRYTOND_DATABASE__URI
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-%s-configuration" .Release.Name .Chart.Name | trunc 63 | trimSuffix "-" }}
                  key: TRYTOND_DATABASE__URI
            - name:  TRYTOND_SESSION__PASSPHRASE
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-%s-configuration" .Release.Name .Chart.Name | trunc 63 | trimSuffix "-" }}
                  key: TRYTOND_SESSION__PASSPHRASE
            - name: TRYTOND_REPORT__API
              valueFrom:
                configMapKeyRef:
                  name: {{ printf "%s-%s-configuration" .Release.Name .Chart.Name | trunc 63 | trimSuffix "-" }}
                  key: TRYTOND_REPORT__API
            - name: COOG_POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ printf "%s-%s-configuration" .Release.Name .Chart.Name | trunc 63 | trimSuffix "-" }}
                  key: COOG_POSTGRES_HOST
            - name: COOG_POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ printf "%s-%s-configuration" .Release.Name .Chart.Name | trunc 63 | trimSuffix "-" }}
                  key: COOG_POSTGRES_PORT
            - name: COOG_DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ printf "%s-%s-configuration" .Release.Name .Chart.Name | trunc 63 | trimSuffix "-" }}
                  key: COOG_DB_NAME
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ printf "%s-%s-configuration" .Release.Name .Chart.Name | trunc 63 | trimSuffix "-" }}
                  key: COOG_DB_NAME
            - name: CELERY_MAX_MEMORY_PER_CHILD
              valueFrom:
                configMapKeyRef:
                  name: {{ printf "%s-%s-configuration" .Release.Name .Chart.Name | trunc 63 | trimSuffix "-" }}
                  key: CELERY_MAX_MEMORY_PER_CHILD
            {{- range $key, $value := .Values.coog.config }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ printf "%s-%s-configuration" $.Release.Name $.Chart.Name | trunc 63 | trimSuffix "-" }}
                  key: {{ $key }}
            {{- end }}
            {{- range $key, $value := .Values.celery.config }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ printf "%s-configuration" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}
                  key: {{ $key }}
            {{- end }}
            {{- range $key, $value := .Values.secrets.coog }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-%s-configuration" $.Release.Name $.Chart.Name | trunc 63 | trimSuffix "-" }}
                  key: {{ $key }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.coog.containerPorts.http }}
          startupProbe: {{- toYaml (default .Values.startupProbe .Values.celery.startupProbe) | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /liveness
              port: http
            exec:
              command: ['/bin/bash', '-c', 'celery -A {{ .Values.cron.coogCeleryModule }} inspect ping -d celery@$HOSTNAME']
            {{- toYaml (default .Values.livenessProbe .Values.celery.livenessProbe) | nindent 12 }}
          readinessProbe:
            httpGet:
              path: "/{{ .Values.postgresql.auth.database }}/readiness"
              port: http
            exec:
              command: ['/bin/bash', '-c', 'celery -A {{ .Values.cron.coogCeleryModule }} inspect ping -d celery@$HOSTNAME']
            {{- toYaml (default .Values.readinessProbe .Values.celery.readinessProbe) | nindent 12 }}
          resources: {{- toYaml .Values.celery.resources | nindent 12 }}
      {{- with default .Values.nodeSelector .Values.celery.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with default .Values.affinity .Values.celery.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with default .Values.tolerations .Values.celery.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if default .Values.dnsPolicy .Values.celery.dnsPolicy }}
      dnsPolicy: {{ default .Values.dnsPolicy .Values.celery.dnsPolicy }}
      {{- end }}
      {{- if default .Values.dnsConfig .Values.celery.dnsConfig }}
      dnsConfig: {{- toYaml default .Values.dnsConfig .Values.celery.dnsConfig | indent 8 }}
      {{- end }}
